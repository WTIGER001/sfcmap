{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/controls/marker-combo/marker-combo.component.css","webpack:///./src/app/controls/marker-combo/marker-combo.component.html","webpack:///./src/app/controls/marker-combo/marker-combo.component.ts","webpack:///./src/app/controls/marker-group-combo/marker-group-combo.component.css","webpack:///./src/app/controls/marker-group-combo/marker-group-combo.component.html","webpack:///./src/app/controls/marker-group-combo/marker-group-combo.component.ts","webpack:///./src/app/controls/unchecklist.directive.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/dialogs/access-dialog/access-dialog.component.css","webpack:///./src/app/dialogs/access-dialog/access-dialog.component.html","webpack:///./src/app/dialogs/access-dialog/access-dialog.component.ts","webpack:///./src/app/dialogs/common-dialog.service.ts","webpack:///./src/app/dialogs/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/dialogs/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/dialogs/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/dialogs/dialog.service.ts","webpack:///./src/app/dialogs/input-dialog/input-dialog.component.css","webpack:///./src/app/dialogs/input-dialog/input-dialog.component.html","webpack:///./src/app/dialogs/input-dialog/input-dialog.component.ts","webpack:///./src/app/dialogs/marker-dialog/marker-dialog.component.css","webpack:///./src/app/dialogs/marker-dialog/marker-dialog.component.html","webpack:///./src/app/dialogs/marker-dialog/marker-dialog.component.ts","webpack:///./src/app/dialogs/message-dialog/message-dialog.component.css","webpack:///./src/app/dialogs/message-dialog/message-dialog.component.html","webpack:///./src/app/dialogs/message-dialog/message-dialog.component.ts","webpack:///./src/app/dialogs/restrict.service.ts","webpack:///./src/app/leaflet/box-select.js","webpack:///./src/app/map.service.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/mgr-group/mgr-group.component.css","webpack:///./src/app/mgr-group/mgr-group.component.html","webpack:///./src/app/mgr-group/mgr-group.component.ts","webpack:///./src/app/mgr-map/mgr-map.component.css","webpack:///./src/app/mgr-map/mgr-map.component.html","webpack:///./src/app/mgr-map/mgr-map.component.ts","webpack:///./src/app/mgr-marker/mgr-marker.component.css","webpack:///./src/app/mgr-marker/mgr-marker.component.html","webpack:///./src/app/mgr-marker/mgr-marker.component.ts","webpack:///./src/app/models.ts","webpack:///./src/app/notify.service.ts","webpack:///./src/app/tabs/admin/admin.component.css","webpack:///./src/app/tabs/admin/admin.component.html","webpack:///./src/app/tabs/admin/admin.component.ts","webpack:///./src/app/tabs/layers-tab/layers-tab.component.css","webpack:///./src/app/tabs/layers-tab/layers-tab.component.html","webpack:///./src/app/tabs/layers-tab/layers-tab.component.ts","webpack:///./src/app/tabs/map-selector/map-selector.component.css","webpack:///./src/app/tabs/map-selector/map-selector.component.html","webpack:///./src/app/tabs/map-selector/map-selector.component.ts","webpack:///./src/app/tabs/marker-side/marker-side.component.css","webpack:///./src/app/tabs/marker-side/marker-side.component.html","webpack:///./src/app/tabs/marker-side/marker-side.component.ts","webpack:///./src/app/tabs/tabs.component.css","webpack:///./src/app/tabs/tabs.component.html","webpack:///./src/app/tabs/tabs.component.ts","webpack:///./src/app/tabs/user-side/user-side.component.css","webpack:///./src/app/tabs/user-side/user-side.component.html","webpack:///./src/app/tabs/user-side/user-side.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".mapcontainer {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    z-index: 1;\\r\\n    background: #ffffff;\\r\\n}\\r\\n\\r\\n:host {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    top: 0;\\r\\n  }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<!-- <div *ngIf=\\\"user; else showLogin\\\">\\r\\n    <h1>Hello {{ user.name }}! {{ user.photo }}</h1>\\r\\n    <img [src]=\\\"user.photo\\\">\\r\\n    <button (click)=\\\"logout()\\\">Logout</button>\\r\\n</div>\\r\\n<ng-template #showLogin>\\r\\n    <p>Please login.</p>\\r\\n    <button (click)=\\\"login()\\\">Login with Google</button>\\r\\n</ng-template> -->\\r\\n\\r\\n<!-- <div *ngIf=\\\"afAuth.user | async as user; else showLogin\\\">\\r\\n    <h1>Hello {{ user.displayName }}!</h1>\\r\\n    <img [src]=\\\"user.photo\\\">\\r\\n    <button (click)=\\\"logout()\\\">Logout</button>\\r\\n</div>\\r\\n<ng-template #showLogin>\\r\\n    <p>Please login.</p>\\r\\n    <button (click)=\\\"login()\\\">Login with Google</button>\\r\\n</ng-template> -->\\r\\n\\r\\n<!-- <div class=\\\"mapcontainer\\\" leaflet [leafletOptions]=\\\"options\\\" [leafletLayers]=\\\"layers\\\" (leafletMapReady)=\\\"onMapReady($event)\\\"></div> -->\\r\\n\\r\\n<app-map></app-map>\\r\\n<app-tabs></app-tabs>\"","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AngularFireStorageModule } from 'angularfire2/storage';\r\nimport { TreeModule } from 'angular-tree-component';\r\n\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MapSelectorComponent } from './tabs/map-selector/map-selector.component';\r\nimport { AdminComponent } from './tabs/admin/admin.component';\r\nimport { UserSideComponent } from './tabs/user-side/user-side.component';\r\nimport { MarkerSideComponent } from './tabs/marker-side/marker-side.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { MapService } from './map.service';\r\nimport { CommonDialogService } from './dialogs/common-dialog.service';\r\nimport { InputDialogComponent } from './dialogs/input-dialog/input-dialog.component';\r\nimport { MessageDialogComponent } from './dialogs/message-dialog/message-dialog.component';\r\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialog/confirm-dialog.component';\r\nimport { MarkerDialogComponent } from './dialogs/marker-dialog/marker-dialog.component';\r\nimport { NotifyService } from './notify.service';\r\nimport { DataService } from './data.service';\r\nimport { MgrGroupComponent } from './mgr-group/mgr-group.component';\r\nimport { MgrMarkerComponent } from './mgr-marker/mgr-marker.component';\r\nimport { MgrMapComponent } from './mgr-map/mgr-map.component';\r\nimport { DialogService } from './dialogs/dialog.service';\r\nimport { ChecklistModule } from 'angular-checklist';\r\nimport { AccessDialogComponent } from './dialogs/access-dialog/access-dialog.component';\r\nimport { RestrictService } from './dialogs/restrict.service';\r\nimport { MarkerComboComponent } from './controls/marker-combo/marker-combo.component';\r\nimport { LayersTabComponent } from './tabs/layers-tab/layers-tab.component';\r\nimport { MarkerGroupComboComponent } from './controls/marker-group-combo/marker-group-combo.component';\r\nimport { UnchecklistDirective } from './controls/unchecklist.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent,\r\n    MapSelectorComponent,\r\n    AdminComponent,\r\n    UserSideComponent,\r\n    MarkerSideComponent,\r\n    TabsComponent,\r\n    InputDialogComponent,\r\n    MessageDialogComponent,\r\n    ConfirmDialogComponent,\r\n    MarkerDialogComponent,\r\n    MgrGroupComponent,\r\n    MgrMarkerComponent,\r\n    MgrMapComponent,\r\n    AccessDialogComponent,\r\n    MarkerComboComponent,\r\n    LayersTabComponent,\r\n    MarkerGroupComboComponent,\r\n    UnchecklistDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule, // imports firebase/firestore, only needed for database features\r\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule,\r\n    LeafletModule.forRoot(),\r\n    FontAwesomeModule,\r\n    NgbModule.forRoot(),\r\n    TreeModule,\r\n    ChecklistModule\r\n  ],\r\n  providers: [\r\n    MapService,\r\n    CommonDialogService,\r\n    NotifyService,\r\n    DataService,\r\n    DialogService,\r\n    RestrictService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    InputDialogComponent,\r\n    MessageDialogComponent,\r\n    ConfirmDialogComponent,\r\n    MgrGroupComponent,\r\n    MgrMapComponent,\r\n    MgrMarkerComponent,\r\n    AccessDialogComponent\r\n  ]\r\n})\r\nexport class AppModule {\r\n  constructor() {\r\n    library.add(fas);\r\n  }\r\n}\r\n","module.exports = \"\\r\\nlabel.small {\\r\\n    font-size: .8em;\\r\\n    margin-bottom: 4px;\\r\\n}\\r\\n\\r\\n.icon-flow {\\r\\n    padding: .2em;\\r\\n    width: 30px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.icon-holder {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.dh {\\r\\n    white-space: normal;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.toggle2 {\\r\\n    border-top-left-radius: 0px;\\r\\n    border-bottom-left-radius: 0px;\\r\\n}\\r\\n\\r\\n.main {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n}\"","module.exports = \"<div class=\\\"input-group\\\">\\n\\n  <div class=\\\"form-control form-control-sm main py-0\\\" id=\\\"name\\\" placeholder=\\\"Enter Marker Type\\\">\\n      <img *ngIf=\\\"selected\\\" [src]=\\\"selected.url\\\" height=\\\"32\\\" class=\\\"mr-1\\\"> {{name()}}\\n  </div>\\n\\n  <div class=\\\"input-group-append\\\">\\n    <div ngbDropdown placement=\\\"bottom-right\\\">\\n      <button class=\\\"btn btn-outline-secondary toggle2\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle> </button>\\n      <div ngbDropdownMenu class=\\\"icon-dropdown\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n        <ng-container *ngFor=\\\"let cat of categories\\\">\\n          <h6 class=\\\"dropdown-header dh\\\">{{cat.name}}</h6>\\n          <div class=\\\"icon-holder\\\">\\n            <button *ngFor=\\\"let t of cat.types\\\" class=\\\"dropdown-item btn-sm icon-flow\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"t.name\\\" (click)=\\\"select(t)\\\">\\n              <img [src]=\\\"t.url\\\" height=30>\\n            </button>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, Output, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { MarkerType, MapConfig, MapType } from '../../models';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { typeSourceSpan } from '@angular/compiler';\r\nimport { MapService } from '../../map.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-marker-combo',\r\n  templateUrl: './marker-combo.component.html',\r\n  styleUrls: ['./marker-combo.component.css'],\r\n  providers: [\r\n    { provide: NG_VALUE_ACCESSOR, useExisting: MarkerComboComponent, multi: true }\r\n  ]\r\n})\r\nexport class MarkerComboComponent implements ControlValueAccessor {\r\n  _map: MapConfig\r\n  _mapType: MapType\r\n  selected: MarkerType\r\n  private innerValue\r\n  private changed = [];\r\n  private touched = [];\r\n  private disabled: boolean;\r\n\r\n\r\n  all = []\r\n  categories = []\r\n\r\n  constructor(private mapSvc: MapService) {\r\n\r\n  }\r\n\r\n  @Input() set map(m: MapConfig) {\r\n    this._map = m\r\n    this.refresh()\r\n  }\r\n\r\n  @Input() set mapType(m: MapType) {\r\n    this._mapType = m\r\n    this.refresh()\r\n  }\r\n\r\n  get map(): MapConfig {\r\n    return this._map\r\n  }\r\n\r\n  get mapType(): MapType {\r\n    return this._mapType\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mapSvc.catsLoaded.subscribe(v => {\r\n      this.all = this.mapSvc.categories\r\n      this.refresh()\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    let mapTypeId = ''\r\n    if (this.map) {\r\n      mapTypeId = this.map.mapType\r\n    } else if (this.mapType) {\r\n      mapTypeId = this.mapType.id\r\n    }\r\n    if (this.innerValue) {\r\n      this.selected = this.mapSvc.getMarkerType(this.innerValue)\r\n    }\r\n\r\n    this.categories = this.all.filter(c => {\r\n      if (c.appliesTo && c.appliesTo.length > 0) {\r\n        return c.appliesTo.includes(mapTypeId)\r\n      } else {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  name(): string {\r\n    if (this.value) {\r\n      let mk = this.mapSvc.getMarkerType(this.value)\r\n      if (mk) {\r\n        return mk.name\r\n      }\r\n      return 'Ugh....'\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n\r\n  select(type: MarkerType) {\r\n    this.value = type.id\r\n    this.selected = type\r\n  }\r\n\r\n  get value(): string {\r\n    return this.innerValue;\r\n  }\r\n\r\n  set value(value: string) {\r\n    if (this.innerValue !== value) {\r\n      this.innerValue = value;\r\n      this.refresh()\r\n      this.changed.forEach(f => f(value));\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.changed.push(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.touched.push(fn);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(obj: string): void {\r\n    this.innerValue = obj;\r\n    this.refresh()\r\n  }\r\n}\r\n","module.exports = \".toggle2 {\\r\\n    border-top-left-radius: 0px;\\r\\n    border-bottom-left-radius: 0px;\\r\\n}\"","module.exports = \"<div class=\\\"input-group\\\">\\r\\n  <input type=\\\"text\\\" name=\\\"markergroup\\\" class=\\\"form-control form-control-sm main py-0\\\" id=\\\"mg\\\" placeholder=\\\"Enter Group Name\\\"\\r\\n    [value]=\\\"name()\\\" (change)=\\\"onTextChange($event)\\\">\\r\\n  <div class=\\\"input-group-append\\\">\\r\\n    <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary toggle2\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle> </button>\\r\\n      <div ngbDropdownMenu class=\\\"icon-dropdown\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n        <button *ngFor=\\\"let t of all\\\" class=\\\"dropdown-item btn-sm\\\" placement=\\\"bottom\\\" (click)=\\\"select(t)\\\">{{t.name}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MapConfig, MarkerGroup } from '../../models';\r\nimport { DataService } from '../../data.service';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MyMarker } from '../../map.service';\r\n\r\n@Component({\r\n  selector: 'app-marker-group-combo',\r\n  templateUrl: './marker-group-combo.component.html',\r\n  styleUrls: ['./marker-group-combo.component.css'],\r\n  providers: [\r\n    { provide: NG_VALUE_ACCESSOR, useExisting: MarkerGroupComboComponent, multi: true }\r\n  ]\r\n})\r\nexport class MarkerGroupComboComponent implements ControlValueAccessor {\r\n  selected: MarkerGroup\r\n  mk: MyMarker\r\n  private innerValue: string\r\n  private changed = [];\r\n  private touched = [];\r\n  private disabled: boolean;\r\n\r\n  all: MarkerGroup[] = []\r\n  options = []\r\n\r\n  constructor(private data: DataService) {\r\n\r\n  }\r\n\r\n  @Input() set marker(m: MyMarker) {\r\n    this.mk = m\r\n    this.innerValue = m.markerGroup\r\n    this.refresh()\r\n  }\r\n\r\n  get marker(): MyMarker {\r\n    return this.mk\r\n  }\r\n\r\n  onTextChange($event) {\r\n    console.log('---------TEXT------');\r\n    console.log($event);\r\n    this.value = event.target['value']\r\n    console.log(this.innerValue);\r\n    console.log('---------------');\r\n    // this.innerValue.markerGroup = event\r\n  }\r\n\r\n  refresh() {\r\n    this.data.getMarkerGroups(this.marker.map)\r\n      .subscribe(v => {\r\n        this.all = v\r\n        if (this.innerValue) {\r\n          this.selected = this.all.find(mg => mg.id == this.innerValue)\r\n        }\r\n      })\r\n  }\r\n\r\n  name(): string {\r\n    if (this.selected) {\r\n      return this.selected.name\r\n    } else if (this.innerValue) {\r\n      let item = this.all.find(mg => mg.id == this.innerValue)\r\n      if (item) {\r\n        return item.name\r\n      }\r\n      return this.innerValue\r\n    }\r\n    return ''\r\n  }\r\n\r\n\r\n  select(type: MarkerGroup) {\r\n    this.value = type.id\r\n    this.selected = type\r\n  }\r\n\r\n  get value(): string {\r\n    return this.innerValue;\r\n  }\r\n\r\n  set value(value: string) {\r\n    console.log(\"Setting to : \" + value);\r\n    if (this.innerValue !== value) {\r\n      this.innerValue = value;\r\n      this.refresh()\r\n      this.changed.forEach(f => f(value));\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.changed.push(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.touched.push(fn);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(obj: string): void {\r\n    console.log('---------------');\r\n    console.log(obj);\r\n    console.log('---------------');\r\n\r\n    this.innerValue = obj;\r\n    this.refresh()\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n@Directive({\n  host: {\n    '(change)': 'triggerOnChange($event)',\n    '[checked]': 'isChecked',\n  },\n  selector: '[unchecklist]',\n})\nexport class UnchecklistDirective implements OnChanges {\n  @Input() unchecklist: any[];\n  @Input() unchecklistValue: any;\n  @Input() maxSelectedItems = -1;\n  @Output() unchecklistChange = new EventEmitter<any[]>();\n  isChecked: boolean;\n\n  ////////////\n  ngOnChanges() {\n    const checklist = this.unchecklist || [];\n    this.isChecked = !checklist.includes(this.unchecklistValue)\n  }\n\n  triggerOnChange($event: Event) {\n    const target = $event.target as HTMLInputElement;\n    let updatedList;\n    const checklist = this.unchecklist || [];\n\n    if (target && target.checked) {\n      if (this.maxSelectedItems === -1 || checklist.length < this.maxSelectedItems) {\n        // updatedList = [...checklist, this.checklistValue];\n        const i = checklist.indexOf(this.unchecklistValue);\n        updatedList = [...checklist.slice(0, i), ...checklist.slice(i + 1)];\n\n        this.unchecklistChange.emit(updatedList);\n      } else {\n        target.checked = false;\n      }\n    } else {\n      // const i = checklist.indexOf(this.checklistValue);\n      // updatedList = [...checklist.slice(0, i), ...checklist.slice(i + 1)];\n      updatedList = [...checklist, this.unchecklistValue];\n      this.unchecklistChange.emit(updatedList);\n    }\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { ReplaySubject, Observable, zip, range, combineLatest, forkJoin, BehaviorSubject, of } from 'rxjs';\r\nimport { MapType, MapConfig, UserGroup, MarkerCategory, MarkerType, SavedMarker, MergedMapType, User, IObjectType, MarkerGroup, UserPreferences } from './models';\r\nimport { AngularFireDatabase, AngularFireAction } from 'angularfire2/database';\r\nimport { NotifyService } from './notify.service';\r\nimport { AngularFireStorage } from 'angularfire2/storage';\r\nimport { mergeMap, map, concatMap, bufferCount } from 'rxjs/operators';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  ready = new ReplaySubject<boolean>()\r\n\r\n  // The currently logged in user\r\n  user = new BehaviorSubject<User>(new User())\r\n  userPrefs = new BehaviorSubject<UserPreferences>(new UserPreferences())\r\n\r\n  mapTypes = new ReplaySubject<Array<MapType>>()\r\n  maps = new ReplaySubject<Array<MapConfig>>()\r\n  users = new ReplaySubject<Array<User>>()\r\n  groups = new ReplaySubject<Array<UserGroup>>()\r\n  markerCategories = new ReplaySubject<Array<MarkerCategory>>()\r\n  markerTypes = new ReplaySubject<Array<MarkerType>>()\r\n  mapsWithUrls = new ReplaySubject<Array<MarkerType>>()\r\n  mapTypesWithMaps = new ReplaySubject<Array<MergedMapType>>()\r\n\r\n  constructor(private afAuth: AngularFireAuth, private db: AngularFireDatabase, private notify: NotifyService, private storage: AngularFireStorage) {\r\n\r\n    afAuth.authState\r\n      .pipe(\r\n        map(fireUser => User.fromFireUser(fireUser)),\r\n        mergeMap(u => this.getUserInfo(u))\r\n      )\r\n      .subscribe(u => {\r\n        console.log(\"User Logged in \" + u.uid)\r\n        console.log(u);\r\n        this.user.next(u)\r\n      });\r\n\r\n    this.user.pipe(\r\n      mergeMap(u => this.getUserPrefs(u))\r\n    ).subscribe(\r\n      prefs => this.userPrefs.next(prefs)\r\n    )\r\n\r\n    this.loadAndNotify<MapType>(this.toMapType, this.mapTypes, 'mapTypes', 'Loading Map Types')\r\n    this.loadAndNotify<MapConfig>(this.toMap, this.maps, 'maps', 'Loading Maps')\r\n    this.loadAndNotify<User>(this.toUser, this.users, 'users', 'Loading Users')\r\n    this.loadAndNotify<UserGroup>(this.toGroup, this.groups, 'groups', 'Loading User Groups')\r\n    this.loadAndNotify<MarkerCategory>(this.toMarkerCategory, this.markerCategories, 'markerCategories', 'Loading Marker Categories')\r\n    this.loadAndNotify<MarkerType>(this.toMarkerType, this.markerTypes, 'markerTypes', 'Loading Marker Types')\r\n\r\n    // Load the URLS\r\n    this.maps.pipe(\r\n      concatMap(i => i),\r\n      mergeMap(m => this.fillInMapUrl(m)),\r\n      mergeMap(m => this.fillInMapThumb(m))\r\n    ).subscribe(a => {\r\n\r\n    })\r\n\r\n    combineLatest(this.mapTypes, this.maps)\r\n      .subscribe(([mts, mps]) => {\r\n        let mergedArr = new Array<MergedMapType>()\r\n        mts.forEach(mt => {\r\n          let merged = new MergedMapType()\r\n          merged.name = mt.name\r\n          merged.order = mt.order\r\n          merged.id = mt.id\r\n          merged.defaultMarker = mt.defaultMarker\r\n          merged.maps = mps.filter(m => m.mapType == merged.id && this.canView(m))\r\n          mergedArr.push(merged)\r\n        })\r\n        let items = mergedArr.sort((a, b) => a.order - b.order)\r\n        this.mapTypesWithMaps.next(items)\r\n      })\r\n\r\n    combineLatest(this.user, this.maps, this.mapTypes, this.markerTypes, this.markerCategories)\r\n      .subscribe(() => {\r\n        this.ready.next(true)\r\n      })\r\n  }\r\n\r\n  getMarkers(mapid: string): Observable<Array<SavedMarker>> {\r\n    return this.db.list('markers/' + mapid)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(items => {\r\n          let markers = new Array<SavedMarker>()\r\n          items.forEach(m => {\r\n            markers.push(<SavedMarker>m.payload.val())\r\n          })\r\n          return markers;\r\n        })\r\n      )\r\n  }\r\n\r\n  getMarkerGroups(mapid: string): Observable<Array<MarkerGroup>> {\r\n    return this.db.list('markerGroups/' + mapid)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(items => {\r\n          let markers = new Array<MarkerGroup>()\r\n          items.forEach(m => {\r\n            markers.push(this.toMarkerGroup(m.payload.val()))\r\n          })\r\n          return markers;\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n  toObject(item: IObjectType): MarkerGroup | UserGroup | UserPreferences {\r\n    if (MarkerGroup.is(item)) { return item }\r\n    if (UserGroup.is(item)) { return item }\r\n    if (UserPreferences.is(item)) { return item }\r\n  }\r\n\r\n  dbPath(item: IObjectType): string {\r\n    if (MarkerGroup.is(item)) { return MarkerGroup.dbPath(item) }\r\n    if (UserGroup.is(item)) { return 'groups/' + item.name }\r\n    if (UserPreferences.is(item)) { return UserPreferences.dbPath(item) }\r\n  }\r\n\r\n  sample(item: IObjectType): any {\r\n    if (MarkerGroup.is(item)) { return MarkerGroup.SAMPLE }\r\n    if (UserGroup.is(item)) { return UserGroup.SAMPLE }\r\n    if (UserPreferences.is(item)) { return UserPreferences.SAMPLE }\r\n\r\n  }\r\n\r\n  save(item: IObjectType) {\r\n    // Copy the Item so we only save a normal javascript object, and remove all the bad\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    // Remove the fields that are not part of the object that should be saved in the database\r\n    this.trimExtraneousFields(toSave, this.sample(item))\r\n\r\n    // Get path to the object\r\n    let path = this.dbPath(item)\r\n    console.log(toSave);\r\n\r\n    this.db.object(path).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + path)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving \" + path)\r\n    })\r\n  }\r\n\r\n  delete(item: IObjectType) {\r\n    let path = this.dbPath(item)\r\n    this.db.object(path).remove().then(() => {\r\n      this.notify.success(\"Removed \")\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleting Map\")\r\n    })\r\n  }\r\n\r\n  private toMapType(item: any): MapType {\r\n    let me = new MapType()\r\n    Object.assign(me, item)\r\n\r\n    return me\r\n  }\r\n\r\n  private toMap(item: any): MapConfig {\r\n    let me = new MapConfig()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private toUser(item: any): User {\r\n    let me = new User()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private toGroup(item: any): UserGroup {\r\n    // let me = new UserGroup()\r\n    // Object.assign(me, item)\r\n    return <UserGroup>item\r\n  }\r\n\r\n  private toMarkerCategory(item: any): MarkerCategory {\r\n    let me = new MarkerCategory()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private toMarkerType(item: any): MarkerType {\r\n    let me = new MarkerType()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private toMarkerGroup(item: any): MarkerGroup {\r\n    let me = new MarkerGroup()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private toUserPreferences(item: any): UserPreferences {\r\n    let me = new UserPreferences()\r\n    Object.assign(me, item)\r\n    return me\r\n  }\r\n\r\n  private loadAndNotify<T>(convert: (a: any) => T, subject: ReplaySubject<Array<T>>, name: string, errorType: string, sorter?: (items: Array<T>) => void) {\r\n    console.log(\"Working on \" + name);\r\n\r\n    this.db.list(name).snapshotChanges().subscribe(\r\n      inTypes => {\r\n        let items = new Array<T>()\r\n        inTypes.forEach(item => {\r\n          let converted = convert(item.payload.val())\r\n          items.push(converted)\r\n        })\r\n        console.log(\"Loaded \" + items.length + \" \" + name);\r\n        if (sorter) {\r\n          sorter(items)\r\n        }\r\n        subject.next(items)\r\n      },\r\n      error => {\r\n        this.notify.showError(error, errorType)\r\n      }\r\n    )\r\n  }\r\n\r\n  url(item: MapConfig | MarkerType): Observable<string> {\r\n    let path = 'images/' + item.id\r\n    const ref = this.storage.ref(path);\r\n    return ref.getDownloadURL().pipe(\r\n      map(item => {\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  fillInUrl(item: MarkerType): Observable<MarkerType> {\r\n    let path = 'images/' + item.id\r\n    const ref = this.storage.ref(path);\r\n    return ref.getDownloadURL().pipe(\r\n      map(url => {\r\n        item.url = url\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  fillInMapUrl(item: MapConfig): Observable<MapConfig> {\r\n    let path = 'images/' + item.id\r\n    const ref = this.storage.ref(path);\r\n    return ref.getDownloadURL().pipe(\r\n      map(url => {\r\n        item.image = url\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  fillInMapThumb(item: MapConfig): Observable<MapConfig> {\r\n    return this.thumb(item).pipe(\r\n      map(url => {\r\n        item.thumb = url\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  thumb(mapCfg: MapConfig): Observable<string> {\r\n    let path = 'images/' + mapCfg.id + \"_thumb\"\r\n    const ref = this.storage.ref(path);\r\n    return ref.getDownloadURL()\r\n  }\r\n\r\n\r\n  saveMarker(item: SavedMarker) {\r\n    // Convert the Saved Marker into a regular object\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n\r\n\r\n    this.db.object('markers/' + item.map + \"/\" + item.id).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Marker\")\r\n    })\r\n  }\r\n\r\n\r\n  saveWithImage(item: MarkerType) {\r\n    let f: File = item[\"__FILE\"]\r\n    this.storage.upload('images/' + item.id, f)\r\n      .snapshotChanges()\r\n      .subscribe(v => { }, e => { }, () => {\r\n        this.saveMarkerTypeNoImage(item)\r\n      })\r\n\r\n  }\r\n\r\n  saveMarkerTypeNoImage(item: MarkerType) {\r\n    console.log(\"saving\")\r\n\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n\r\n    this.db.object('markerTypes/' + item.id).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Marker\")\r\n    })\r\n  }\r\n\r\n  saveMarkerType(item: MarkerType) {\r\n    let f: File = item[\"__FILE\"]\r\n    if (f) {\r\n      this.saveWithImage(item)\r\n    } else {\r\n      this.saveMarkerTypeNoImage(item)\r\n    }\r\n  }\r\n\r\n  saveMarkerCategory(item: MarkerCategory) {\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n\r\n    this.db.object('markerCategories/' + item.id).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Group\")\r\n    })\r\n  }\r\n\r\n  saveUserGroup(item: UserGroup) {\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n\r\n    this.db.object('groups/' + item.name).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Group\")\r\n    })\r\n  }\r\n\r\n\r\n  saveMapType(item: MapType) {\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n    this.db.object('mapTypes/' + item.id).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Group\")\r\n    })\r\n  }\r\n\r\n  saveMap(map: MapConfig, image?: Blob, thumb?: Blob) {\r\n    console.log(\"Saving Map a\");\r\n    if (thumb && image) {\r\n      console.log(\"Saving Map b\");\r\n\r\n      let pathImage = 'images/' + map.id\r\n      let pathThumb = 'images/' + map.id + \"_thumb\"\r\n\r\n      let obsImage = this.saveImage(image, pathImage)\r\n      let obsThumb = this.saveImage(thumb, pathThumb)\r\n\r\n      // Wait for the images to be uploaded\r\n      forkJoin(obsImage, obsThumb).subscribe(results => {\r\n\r\n        this._saveMap(map)\r\n      }, err => {\r\n        console.log(\"ERROR\");\r\n        console.log(err);\r\n      }, () => {\r\n        console.log(\"Complete\");\r\n      })\r\n\r\n    } else {\r\n      this._saveMap(map)\r\n    }\r\n  }\r\n\r\n  private _saveMap(item: MapConfig) {\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n    this.db.object('maps/' + item.id).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Map\")\r\n    })\r\n  }\r\n\r\n  saveImage(data: Blob, path: string) {\r\n    console.log(\"Saving Map Blob \" + path);\r\n\r\n    const ref = this.storage.ref(path)\r\n    return ref.put(data)\r\n      .snapshotChanges()\r\n  }\r\n\r\n  saveUser(item: User) {\r\n    let toSave = this.clean(Object.assign({}, item))\r\n    console.log(toSave);\r\n\r\n    this.db.object('users/' + item.uid).set(toSave).then(() => {\r\n      this.notify.success(\"Saved \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving User\")\r\n    })\r\n  }\r\n\r\n  deleteMapType(item: MapType) {\r\n    this.db.object('mapTypes/' + item.id).remove().then(() => {\r\n      this.notify.success(\"Removed \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleting Map\")\r\n    })\r\n  }\r\n\r\n  deleteMap(item: MapConfig) {\r\n    this.db.object('maps/' + item.id).remove().then(() => {\r\n      this.notify.success(\"Removed \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleting Map\")\r\n    })\r\n\r\n    this.storage.ref('images/' + item.id).delete()\r\n    this.storage.ref('images/' + item.id + \"_thumb\").delete()\r\n\r\n  }\r\n\r\n  deleteMarker(item: SavedMarker) {\r\n    this.db.object('markers/' + item.map + \"/\" + item.id).remove().then(() => {\r\n      this.notify.success(\"Removed \" + item.name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Saving Marker\")\r\n    })\r\n  }\r\n\r\n  deleteMarkerCategory(item: MarkerCategory | string) {\r\n    let dbId = ''\r\n    let name = 'Category'\r\n    if (typeof (item) == 'string') {\r\n      dbId = item\r\n    } else {\r\n      dbId = item.id\r\n      name = item.name\r\n    }\r\n\r\n    this.db.object('markerCategories/' + dbId).remove().then(() => {\r\n      this.notify.success(\"Removed \" + name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleteing \" + name)\r\n    })\r\n\r\n    this.storage.ref('images/' + dbId).delete()\r\n  }\r\n\r\n  deleteMarkerType(item: MarkerType | string) {\r\n    let dbId = ''\r\n    let name = 'Marker Type'\r\n    if (typeof (item) == 'string') {\r\n      dbId = item\r\n    } else {\r\n      dbId = item.id\r\n      name = item.name\r\n    }\r\n    this.db.object('markerTypes/' + dbId).remove().then(() => {\r\n      this.notify.success(\"Removed \" + name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleteing \" + name)\r\n    })\r\n\r\n    this.storage.ref('images/' + dbId).delete()\r\n  }\r\n\r\n  deleteUserGroup(item: UserGroup): any {\r\n    this.db.object('groups/' + item.name).remove().then(() => {\r\n      this.notify.success(\"Removed \" + name)\r\n    }).catch(reason => {\r\n      this.notify.showError(reason, \"Error Deleteing \" + name)\r\n    })\r\n  }\r\n\r\n  clean(obj): any {\r\n    for (var propName in obj) {\r\n      if (obj[propName] === null || obj[propName] === undefined) {\r\n        delete obj[propName];\r\n      }\r\n    }\r\n    return obj\r\n  }\r\n\r\n  trimExtraneousFields(obj: any, sample: any) {\r\n    if (sample) {\r\n      let fields = new Map<string, boolean>()\r\n      for (var propName in sample) {\r\n        fields.set(propName, true)\r\n      }\r\n      for (var propName in obj) {\r\n        if (!fields.has(propName)) {\r\n          delete obj[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  copyData(dest: any, src: any, sample: any) {\r\n    for (var propName in sample) {\r\n      dest[propName] = src[propName]\r\n    }\r\n  }\r\n\r\n  isRestricted(obj: any): boolean {\r\n    if (obj.view && obj.view.length > 0) {\r\n      return true\r\n    }\r\n    if (obj.edit && obj.edit.length > 0) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // User Functions\r\n\r\n  canView(item: any): any {\r\n    if (!item['view']) {\r\n      return true\r\n    }\r\n    let view: Array<string> = item['view']\r\n    if (view.length == 0) {\r\n      return true\r\n    }\r\n    if (this.isReal) {\r\n      return view.includes(this.user.getValue().uid)\r\n    }\r\n    return false\r\n  }\r\n\r\n  canEdit(item: any): any {\r\n    if (!item['edit']) {\r\n      return true\r\n    }\r\n    let edit: Array<string> = item['edit']\r\n    if (edit.length == 0) {\r\n      return true\r\n    }\r\n    if (this.isReal) {\r\n      return edit.includes(this.user.getValue().uid)\r\n    }\r\n    return false\r\n  }\r\n\r\n  isReal(): any {\r\n    return this.user.getValue().uid != \"NOBODY\"\r\n  }\r\n\r\n  public saveRecentMarker(markerId: string) {\r\n    if (this.isReal()) {\r\n      let u = this.userPrefs.getValue()\r\n      if (u.recentMarkers) {\r\n        u.recentMarkers.unshift(markerId)\r\n        if (u.recentMarkers.length > 5) {\r\n          u.recentMarkers.splice(5, u.recentMarkers.length - 5)\r\n        }\r\n      } else {\r\n        u.recentMarkers = [markerId]\r\n      }\r\n      this.save(u)\r\n    }\r\n  }\r\n\r\n  public saveRecentMap(mapId: string) {\r\n    console.log(\"Saving Recent Map\");\r\n\r\n    if (this.isReal()) {\r\n      let u = this.userPrefs.getValue()\r\n      console.log(\"Found User Prefs\");\r\n\r\n      if (u.recentMaps) {\r\n        let recent = u.recentMaps.filter(item => item != mapId)\r\n        recent.unshift(mapId)\r\n        if (recent.length > 5) {\r\n          recent.splice(5, recent.length - 5)\r\n        }\r\n        u.recentMaps = recent\r\n      } else {\r\n        u.recentMaps = [mapId]\r\n      }\r\n      console.log(\"Saving\");\r\n      this.save(u)\r\n    }\r\n  }\r\n\r\n  private getUserInfo(u: User): Observable<User> {\r\n    console.log(\"Getting User Information for \" + u.uid);\r\n\r\n    return this.db.object('users/' + u.uid)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        mergeMap(result => {\r\n          if (result.payload.exists()) {\r\n            console.log(\"User Exists\");\r\n\r\n            console.log(result.payload.val());\r\n            var newUser: User = <User>result.payload.val()\r\n            return of(newUser)\r\n          } else {\r\n            console.log(\"User DOESNT \");\r\n            this.saveUser(u)\r\n            return of(u)\r\n          }\r\n        })\r\n      )\r\n  }\r\n\r\n  private getUserPrefs(u: User): Observable<UserPreferences> {\r\n    console.log(\"Getting User Preferences for \" + u.uid);\r\n    return this.db.object(UserPreferences.pathTo(u.uid))\r\n      .snapshotChanges()\r\n      .pipe(\r\n        mergeMap(result => {\r\n          if (result.payload.exists()) {\r\n            console.log(\"User PRefes Exist\");\r\n            let prefs = this.toUserPreferences(<UserPreferences>result.payload.val())\r\n            console.log(prefs)\r\n            return of(prefs)\r\n          } else {\r\n            console.log(\"NO User PRefes Exist\");\r\n\r\n            let newPrefs = new UserPreferences();\r\n            newPrefs.uid = u.uid\r\n            this.save(newPrefs)\r\n            console.log(newPrefs)\r\n            return of(newPrefs)\r\n          }\r\n        })\r\n      )\r\n  }\r\n}\r\n","module.exports = \".choices {\\r\\n    max-height: 400px;\\r\\n    overflow: auto;\\r\\n}\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">\\n    <fa-icon icon=\\\"Lock\\\" size=\\\"lg\\\"></fa-icon> Restrictions</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <label for=\\\"checkView\\\">Viewing Restrictions</label>\\n        <select id=\\\"checkView\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"viewRestrict\\\">\\n          <option value=\\\"false\\\">Everyone</option>\\n          <option value=\\\"true\\\">Only Some People / Groups</option>\\n        </select>\\n        <hr />\\n        <div *ngIf=\\\"viewRestrict=='true'\\\" class=\\\"choices\\\">\\n          <h6>\\n            <fa-icon icon=\\\"users\\\"></fa-icon> Groups</h6>\\n          <div class=\\\"member-list\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of groups\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{opt.name}}\\\" [(checklist)]=\\\"view\\\" [checklistValue]=\\\"opt.name\\\">\\n              <label class=\\\"custom-control-label ml-2\\\" for=\\\"{{opt.name}}\\\"> {{opt.name}}</label>\\n            </div>\\n          </div>\\n          <h6 class=\\\"mt-2\\\">\\n            <fa-icon icon=\\\"user\\\"></fa-icon> Users</h6>\\n          <div class=\\\"member-list\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of users\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{opt.uid}}\\\" [(checklist)]=\\\"view\\\" [checklistValue]=\\\"opt.uid\\\">\\n              <label class=\\\"custom-control-label  ml-2\\\" for=\\\"{{opt.uid}}\\\"> {{opt.name}}</label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <label for=\\\"checkEdit\\\">Editing Restrictions</label>\\n        <select id=\\\"checkEdit\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"editRestrict\\\">\\n          <option value=\\\"false\\\">Everyone</option>\\n          <option value=\\\"true\\\">Only Some People / Groups</option>\\n        </select>\\n        <hr />\\n        <div *ngIf=\\\"editRestrict=='true'\\\"  class=\\\"choices\\\">\\n          <h6>\\n            <fa-icon icon=\\\"users\\\"></fa-icon> Groups</h6>\\n          <div class=\\\"member-list\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of groups\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"E{{opt.name}}\\\" [(checklist)]=\\\"edit\\\" [checklistValue]=\\\"opt.name\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"E{{opt.name}}\\\"> {{opt.name}}</label>\\n            </div>\\n          </div>\\n          <h6 class=\\\"mt-2\\\">\\n            <fa-icon icon=\\\"user\\\"></fa-icon> Users</h6>\\n          <div class=\\\"member-list\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of users\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"E{{opt.uid}}\\\" [(checklist)]=\\\"edit\\\" [checklistValue]=\\\"opt.uid\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"E{{opt.uid}}\\\"> {{opt.name}}</label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"ok()\\\">Ok</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark dialog\\\" (click)=\\\"activeModal.dismiss('Cancel')\\\">Cancel</button>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserGroup, User } from '../../models';\nimport { DataService } from '../../data.service';\nimport { ReplaySubject } from 'rxjs';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { INHERITED_CLASS_WITH_CTOR } from '@angular/core/src/reflection/reflection_capabilities';\n\n@Component({\n  selector: 'app-access-dialog',\n  templateUrl: './access-dialog.component.html',\n  styleUrls: ['./access-dialog.component.css']\n})\nexport class AccessDialogComponent implements OnInit {\n  @Input() inEdit: string[]\n  @Input() inView: string[]\n\n  edit : string[] = []\n  view : string[] = []\n  viewRestrict\n  editRestrict\n  users : User[] = []\n  groups :UserGroup[] =[]\n\n  result = new ReplaySubject<[string[], string[]]>()\n\n  constructor(private data : DataService, public activeModal: NgbActiveModal) {\n    this.data.users.subscribe( u => this.users = u)\n    this.data.groups.subscribe( g => this.groups = g)\n   }\n\n  ngOnInit() {\n    if (this.inEdit) {\n      this.edit = this.inEdit.slice(0)\n    }\n    if (this.inView) {\n      this.view = this.inView.slice(0)\n    }\n    this.update()\n  }\n\n  update() {\n    if (this.view && this.view.length > 0) {\n      this.viewRestrict = 'true'\n    } else {\n      this.viewRestrict = 'false'\n    }\n\n    if (this.edit && this.edit.length > 0) {\n      this.editRestrict = 'true'\n    } else {\n      this.editRestrict = 'false'\n    }\n  }\n\n  ok() {\n    let myView : string[] = []\n    if (this.viewRestrict == 'true') {\n      myView = this.view\n    }\n    let myEdit : string[] = []\n    if (this.editRestrict == 'true') {\n      myEdit = this.edit\n    }\n\n    this.result.next([myView, myEdit])\n    this.activeModal.close()\n  }\n\n  cancel() {\n    this.activeModal.close()\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { MessageDialogComponent } from './message-dialog/message-dialog.component';\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\nimport { InputDialogComponent } from './input-dialog/input-dialog.component';\r\nimport { from, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CommonDialogService {\r\n\r\n  constructor(private modalSvc: NgbModal) {\r\n\r\n  }\r\n\r\n  public messageDialog(message: string, title: string = \"Message\", icon: string = \"info-circle\") {\r\n    const modalRef = this.modalSvc.open(MessageDialogComponent);\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.icon = icon;\r\n  }\r\n\r\n  public confirm(message: string, title: string = \"Confirm\", yesText = \"Yes\", noText = \"No\"): Observable<Boolean> {\r\n    const modalRef = this.modalSvc.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.yesText = yesText;\r\n    modalRef.componentInstance.noText = noText;\r\n    return from(modalRef.result)\r\n  }\r\n\r\n  public inputDialog(message: string, title: string, value = \"\", placeholder = \"\", helpText = \"\", icon: string = \"edit\"): Observable<String> {\r\n    const modalRef = this.modalSvc.open(InputDialogComponent);\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.icon = icon;\r\n    modalRef.componentInstance.value = value;\r\n    modalRef.componentInstance.placeholder = placeholder;\r\n    modalRef.componentInstance.helpText = helpText;\r\n    modalRef.componentInstance.icon = icon;\r\n    return modalRef.componentInstance.result\r\n  }\r\n\r\n  public errorMsg(error: string, title = \"Error\") {\r\n    this.messageDialog(error, title, 'exclamation-triangle');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">\\r\\n    <fa-icon icon=\\\"question-circle\\\" size=\\\"lg\\\"></fa-icon> {{title}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{message}}\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"anwser(true)\\\">{{yesText}}</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"anwser(false)\\\">{{noText}}</button>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  @Input() title: string = \"Confirm\"\r\n  @Input() message: string = \"Are you sure?\"\r\n  @Input() yesText = \"Yes\"\r\n  @Input() noText = \"No\"\r\n  @Output() result = new EventEmitter<Boolean>()\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  anwser(value: boolean) {\r\n    this.result.emit(value);\r\n    this.activeModal.close(value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { from, Observable } from 'rxjs';\r\nimport { MgrMarkerComponent } from '../mgr-marker/mgr-marker.component';\r\nimport { MgrGroupComponent } from '../mgr-group/mgr-group.component';\r\nimport { MgrMapComponent } from '../mgr-map/mgr-map.component';\r\nimport { AccessDialogComponent } from './access-dialog/access-dialog.component';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n\r\n  constructor(private modalSvc: NgbModal) {\r\n\r\n  }\r\n\r\n  public openMarkers() {\r\n    const modalRef = this.modalSvc.open(MgrMarkerComponent,  { size: 'lg' });\r\n  }\r\n  public openGroups() {\r\n    const modalRef = this.modalSvc.open(MgrGroupComponent,  { size: 'lg' });\r\n  } \r\n  public openMaps() {\r\n    const modalRef = this.modalSvc.open(MgrMapComponent,  { size: 'lg' });\r\n  }  \r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">\\r\\n    <fa-icon icon=\\\"{{icon}}\\\"></fa-icon> {{title}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"pName\\\">{{message}}</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pName\\\" placeholder=\\\"{{placeholder}}\\\" [(ngModel)]=\\\"value\\\" name=\\\"name\\\">\\r\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">{{helpText}}</small>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"ok()\\\">OK</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark dialog\\\" (click)=\\\"activeModal.dismiss('Cancel')\\\">Cancel</button>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-input-dialog',\r\n  templateUrl: './input-dialog.component.html',\r\n  styleUrls: ['./input-dialog.component.css']\r\n})\r\nexport class InputDialogComponent implements OnInit {\r\n\r\n  @Input() icon: string = \"edit\";\r\n  @Input() title: string;\r\n  @Input() message: string\r\n  @Input() placeholder = \"\"\r\n  @Input() value = \"\"\r\n  @Input() helpText = \"\"\r\n\r\n  public result: ReplaySubject<String> = new ReplaySubject();\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ok() {\r\n    this.result.next(this.value)\r\n    this.activeModal.close(this.value)\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">\\n    <fa-icon icon=\\\"question-circle\\\" size=\\\"lg\\\"></fa-icon> {{title}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <h4>Recent</h4>\\n\\n  <div *ngFor=\\\"let category of getCategoriesForMap()\\\">\\n    <h4>{{category}}</h4>\\n    <div>\\n      <div class=\\\"selectable-item\\\" *ngFor=\\\"let markerType of getTypesIn(category)\\\">\\n        <img [src]=\\\"markerType.icon\\\" class=\\\"icon\\\">\\n        <span class=\\\"icon-text\\\">{{markerType.name}}</span>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"anwser(true)\\\">{{yesText}}</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"anwser(false)\\\">{{noText}}</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject } from 'rxjs';\nimport { MarkerType } from '../../models';\n\n@Component({\n  selector: 'app-marker-dialog',\n  templateUrl: './marker-dialog.component.html',\n  styleUrls: ['./marker-dialog.component.css']\n})\nexport class MarkerDialogComponent implements OnInit {\n  public result: ReplaySubject<MarkerType> = new ReplaySubject();\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">\\r\\n    <fa-icon *ngIf=\\\"icon\\\" icon=\\\"{{icon}}\\\"></fa-icon> {{title}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{message}}\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success dialog\\\" (click)=\\\"activeModal.close('ok')\\\">OK</button>\\r\\n</div>\"","import { Component, OnInit ,Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-message-dialog',\r\n  templateUrl: './message-dialog.component.html',\r\n  styleUrls: ['./message-dialog.component.css']\r\n})\r\nexport class MessageDialogComponent implements OnInit {\r\n  @Input() icon : string\r\n  @Input() message: string\r\n  @Input() title : string\r\n  \r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { AccessDialogComponent } from './access-dialog/access-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestrictService {\n\n  constructor(private modalSvc: NgbModal) {\n\n  }\n  \n  public openRestrict(view: string[], edit : string[]) : Observable<[string[], string[]]> {\n\n    const modalRef = this.modalSvc.open(AccessDialogComponent,  { size: 'lg' });\n    modalRef.componentInstance.inView = view;\n    modalRef.componentInstance.inEdit = edit;\n    \n    return modalRef.componentInstance.result\n  }\n}\n","/*\r\n * L.Handler.ShiftDragZoom is used to add shift-drag zoom interaction to the map\r\n  * (zoom to a selected bounding box), enabled by default.\r\n */\r\n\r\nL.Map.mergeOptions({\r\n    boxSelect: true\r\n});\r\n\r\nL.Map.BoxSelect = L.Handler.extend({\r\n    initialize: function (map) {\r\n        this._map = map;\r\n        this._container = map._container;\r\n        this._pane = map._panes.overlayPane;\r\n    },\r\n\r\n    addHooks: function () {\r\n        L.DomEvent.on(this._container, 'mousedown', this._onMouseDown, this);\r\n    },\r\n\r\n    removeHooks: function () {\r\n        L.DomEvent.off(this._container, 'mousedown', this._onMouseDown);\r\n    },\r\n\r\n    _onMouseDown: function (e) {\r\n        console.log(\"Mouse DOwn \");\r\n        console.log(e);\r\n\r\n        if (!e.ctrlKey || ((e.which !== 1) && (e.button !== 1))) { return false; }\r\n\r\n        L.DomUtil.disableTextSelection();\r\n\r\n        this._startLayerPoint = this._map.mouseEventToLayerPoint(e);\r\n\r\n        this._box = L.DomUtil.create('div', 'select-box', this._pane);\r\n        L.DomUtil.setPosition(this._box, this._startLayerPoint);\r\n\r\n        //TODO refactor: move cursor to styles\r\n        this._container.style.cursor = 'crosshair';\r\n\r\n        L.DomEvent\r\n            .on(document, 'mousemove', this._onMouseMove, this)\r\n            .on(document, 'mouseup', this._onMouseUp, this)\r\n            .on(document, 'keydown', this._onKeyDown, this)\r\n            .preventDefault(e);\r\n\r\n\r\n        this._map.fire('boxzoomstart');\r\n    },\r\n\r\n    _onMouseMove: function (e) {\r\n        var startPoint = this._startLayerPoint,\r\n            box = this._box,\r\n\r\n            layerPoint = this._map.mouseEventToLayerPoint(e),\r\n            offset = layerPoint.subtract(startPoint),\r\n\r\n            newPos = new L.Point(\r\n                Math.min(layerPoint.x, startPoint.x),\r\n                Math.min(layerPoint.y, startPoint.y));\r\n\r\n        L.DomUtil.setPosition(box, newPos);\r\n\r\n        // TODO refactor: remove hardcoded 4 pixels\r\n        box.style.width = (Math.max(0, Math.abs(offset.x) - 4)) + 'px';\r\n        box.style.height = (Math.max(0, Math.abs(offset.y) - 4)) + 'px';\r\n    },\r\n\r\n    _finish: function () {\r\n        this._pane.removeChild(this._box);\r\n        this._container.style.cursor = '';\r\n\r\n        L.DomUtil.enableTextSelection();\r\n\r\n        L.DomEvent\r\n            .off(document, 'mousemove', this._onMouseMove)\r\n            .off(document, 'mouseup', this._onMouseUp)\r\n            .off(document, 'keydown', this._onKeyDown);\r\n    },\r\n\r\n    _onMouseUp: function (e) {\r\n\r\n        this._finish();\r\n\r\n        var map = this._map,\r\n            layerPoint = map.mouseEventToLayerPoint(e);\r\n\r\n        if (this._startLayerPoint.equals(layerPoint)) { return; }\r\n\r\n        var bounds = new L.LatLngBounds(\r\n            map.layerPointToLatLng(this._startLayerPoint),\r\n            map.layerPointToLatLng(layerPoint));\r\n\r\n        console.log(\"SUCCESS \" + bounds);\r\n\r\n        map.fire('boxselect', {\r\n            boxZoomBounds: bounds\r\n        });\r\n    },\r\n\r\n    _onKeyDown: function (e) {\r\n        if (e.keyCode === 27) {\r\n            this._finish();\r\n        }\r\n    }\r\n});\r\n\r\nL.Map.addInitHook('addHandler', 'boxSelect', L.Map.BoxSelect);","import { Injectable, NgZone } from '@angular/core';\r\nimport { ReplaySubject, combineLatest } from 'rxjs';\r\nimport { Map as LeafletMap, LatLng, Layer, LayerGroup, Marker, layerGroup, icon, IconOptions, marker, Icon, latLng } from 'leaflet';\r\nimport { MapConfig, Selection, MarkerGroup, SavedMarker, MarkerType, MapType, UserPreferences } from './models';\r\nimport { DataService } from './data.service';\r\nimport { mergeMap, concatMap, map } from 'rxjs/operators';\r\nimport { UUID } from 'angular2-uuid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  public static readonly UNCATEGORIZED = \"UNGROUPED\"\r\n\r\n  // Observables\r\n  public selection = new ReplaySubject<Selection>()\r\n  public markerReady = new ReplaySubject<MyMarker>()\r\n  public markerRemove = new ReplaySubject<MyMarker>()\r\n  // public selection = new ReplaySubject<Marker>()\r\n  public updates = new ReplaySubject<Marker>()\r\n\r\n  // Core Data\r\n  map = new ReplaySubject<LeafletMap>()\r\n  mapConfig = new ReplaySubject<MapConfig>()\r\n  prefs: UserPreferences\r\n\r\n  maps: MapConfig[] = []\r\n  _map: LeafletMap\r\n  _mapCfg: MapConfig\r\n  groups: MarkerGroup[] = []\r\n  markers: SavedMarker[] = []\r\n  mapTypes: MapType[]\r\n  myMarkers = new Map<string, MyMarker>()\r\n  myMarks: MyMarker[] = []\r\n  public markersObs = new ReplaySubject<Array<MyMarker>>()\r\n  private types = new Map<string, MarkerType>()\r\n\r\n  // Layers\r\n  layers: Layer[];\r\n  newMarkersLayer: LayerGroup;\r\n  allMarkersLayer: LayerGroup;\r\n  lGroups = new Map<string, LayerGroup>()\r\n\r\n  categories = new Array<Category>()\r\n  defaultMarker: string\r\n  markerTypes = new Map<string, Icon>()\r\n  catsLoaded = new ReplaySubject<boolean>()\r\n\r\n  constructor(private zone: NgZone, private data: DataService) {\r\n    this.allMarkersLayer = layerGroup()\r\n    this.newMarkersLayer = layerGroup()\r\n\r\n    this.data.maps.subscribe(\r\n      maps => this.maps = maps\r\n    )\r\n\r\n    let prefsObs = this.data.userPrefs.pipe(\r\n      map(prefs => this.prefs = prefs),\r\n      map(prefs => {\r\n        if (!this._mapCfg) {\r\n          if (prefs.recentMaps && prefs.recentMaps.length > 0) {\r\n            let mapId = prefs.recentMaps[0]\r\n            let mapConfig = this.maps.find(m => m.id == mapId)\r\n            if (mapConfig) {\r\n              this.setConfig(mapConfig)\r\n            }\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    // Load the Map Types\r\n    this.data.mapTypes.subscribe(t => this.mapTypes = t)\r\n\r\n    // Load the Categories\r\n    this.data.markerCategories.subscribe(cats => {\r\n      let mycats = new Array<Category>()\r\n      cats.forEach(cat => {\r\n        let c = new Category()\r\n        c.id = cat.id\r\n        c.name = cat.name\r\n        c.appliesTo = cat.appliesTo\r\n        mycats.push(c)\r\n      })\r\n      this.categories = mycats\r\n      this.catsLoaded.next(true)\r\n    })\r\n\r\n    // Load each of the icons\r\n    this.catsLoaded.pipe(\r\n      mergeMap(v => {\r\n        this.defaultMarker = undefined\r\n        return this.data.markerTypes\r\n      }),\r\n      concatMap(items => {\r\n        this.categories.forEach(c => {\r\n          c.types = []\r\n        })\r\n        return items\r\n      }),\r\n      mergeMap((value, index) => this.data.fillInUrl(value), 5)\r\n    ).subscribe(markerType => {\r\n      let icn = icon({\r\n        iconUrl: markerType.url,\r\n        iconSize: markerType.iconSize,\r\n        iconAnchor: markerType.iconAnchor\r\n      })\r\n      this.types.set(markerType.id, markerType)\r\n      this.markerTypes.set(markerType.id, icn)\r\n      let cat = this.categories.find(c => c.id == markerType.category)\r\n      if (cat) {\r\n        cat.types.push(markerType)\r\n      } else {\r\n        console.log(\"No Cat found for \" + markerType.category);\r\n      }\r\n      if (this.defaultMarker == undefined) {\r\n        this.defaultMarker = markerType.id\r\n      }\r\n    })\r\n\r\n    let mapMarkerGroupsObs = this.mapConfig\r\n      .pipe(\r\n        map(mapCfg => this._mapCfg = mapCfg),\r\n        mergeMap(newMap => this.data.getMarkerGroups(newMap.id)),\r\n        mergeMap(mgs => {\r\n          this.groups = mgs\r\n\r\n          // Make LayerGroups\r\n          this.makeLayerGroups(mgs);\r\n          return this.data.getMarkers(this._mapCfg.id)\r\n        }),\r\n        map(markers => {\r\n          console.log(\"checking Markers \" + markers.length);\r\n          this.markers = markers\r\n          let localMarkers = new Array<MyMarker>()\r\n          markers.forEach(marker => {\r\n            if (this.data.canView(marker)) {\r\n              let m = this.fromSavedMarker(marker)\r\n              if (m) {\r\n                localMarkers.push(m)\r\n              }\r\n            }\r\n          })\r\n          this.myMarks = localMarkers\r\n          this.markersObs.next(localMarkers)\r\n        })\r\n      )\r\n\r\n    combineLatest(prefsObs, mapMarkerGroupsObs)\r\n      .subscribe(() => {\r\n        console.log(\"BUILDING LAYERS\");\r\n        this.allMarkersLayer.clearLayers()\r\n\r\n        // Loop through the groups. Add each group to the map\r\n        this.groups.forEach(g => {\r\n          this.addGroup(g.id)\r\n        })\r\n        this.addGroup(MapService.UNCATEGORIZED)\r\n\r\n        // Loop through the markers. Add each marker to the group layer\r\n        // \r\n        this.myMarks.forEach(mm => {\r\n          if (!this.prefs.isHiddenMarker(this._mapCfg.id, mm.id)) {\r\n            if (mm.markerGroup) {\r\n              let g = this.lGroups.get(mm.markerGroup)\r\n              this.addEventListeners(mm)\r\n              mm.marker.addTo(g)\r\n            } else {\r\n              let g = this.lGroups.get(MapService.UNCATEGORIZED)\r\n              this.addEventListeners(mm)\r\n              mm.marker.addTo(g)\r\n            }\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  private addGroup(groupId: string) {\r\n    if (!this.prefs.isHiddenGroup(this._mapCfg.id, groupId)) {\r\n      let lGroup = this.lGroups.get(groupId)\r\n      if (lGroup) {\r\n        lGroup.clearLayers()\r\n        lGroup.addTo(this.allMarkersLayer)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private addEventListeners(m: MyMarker) {\r\n    m.marker.addEventListener('click', event => {\r\n      this.zone.run(() => {\r\n        var m = <Marker>event.target\r\n        let marker = new MyMarker(m)\r\n        marker.selected = true\r\n        this.select(new MyMarker(m))\r\n      });\r\n    })\r\n    m.marker.on('add', event => {\r\n      this.zone.run(() => {\r\n        this.markerAdded(m)\r\n      })\r\n    })\r\n    m.marker.on('remove', event => {\r\n      this.zone.run(() => {\r\n        this.markerRemoved(m)\r\n      })\r\n    })\r\n  }\r\n\r\n  private makeLayerGroups(mgs: MarkerGroup[]) {\r\n    this.lGroups.clear();\r\n    this.lGroups.set(MapService.UNCATEGORIZED, layerGroup());\r\n    mgs.forEach(g => {\r\n      let lg = layerGroup();\r\n      this.lGroups.set(g.id, lg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a temporary marker, ready for editing. This needs to be saved if the user wants it persisted to the database\r\n   * @param marker \r\n   */\r\n  addTempMarker(marker: MyMarker) {\r\n    this.newMarkersLayer.clearLayers()\r\n    marker.marker.addTo(this.newMarkersLayer)\r\n    marker.marker.addEventListener('click', event => {\r\n      this.zone.run(() => {\r\n        var m = <Marker>event.target\r\n        let marker = new MyMarker(m)\r\n        marker.selected = true\r\n        this.select(new MyMarker(m))\r\n      });\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create a new Temporary Marker (one that has not been saved yet)\r\n   */\r\n  public newTempMarker(): MyMarker {\r\n    let markerTypeId = this.getDefaultMarker(this._mapCfg)\r\n    var loc = this.getCenter()\r\n    var icn = this.markerTypes.get(markerTypeId)\r\n    if (icn == undefined) {\r\n      console.log(\"ERROR NO ICON\");\r\n    }\r\n    var m = new MyMarker(marker(loc, { icon: icn, draggable: false }))\r\n    m.id = UUID.UUID().toString()\r\n    m.name = \"New Marker\"\r\n    m.type = markerTypeId\r\n    m.map = this._mapCfg.id\r\n\r\n    return m\r\n  }\r\n\r\n  openMap(mapId: string) {\r\n    let me = this.maps.find(m => m.id == mapId)\r\n    if (me) {\r\n      this.setConfig(me)\r\n    }\r\n  }\r\n\r\n  setConfig(mapCfg: MapConfig) {\r\n    this._mapCfg = mapCfg\r\n    this.mapConfig.next(mapCfg)\r\n  }\r\n\r\n  setMap(map: LeafletMap): any {\r\n    this._map = map\r\n    this.map.next(map)\r\n  }\r\n\r\n  panTo(location: any) {\r\n    if (this._map !== undefined) {\r\n      this._map.panTo(location)\r\n    }\r\n  }\r\n\r\n  getCenter(): LatLng {\r\n    if (this._map !== undefined) {\r\n      return this._map.getCenter()\r\n    }\r\n  }\r\n  fit(bounds): any {\r\n    if (this._map !== undefined) {\r\n      return this._map.fitBounds(bounds)\r\n    }\r\n  }\r\n\r\n  select(...items) {\r\n    this.selection.next(new Selection(items))\r\n  }\r\n  markerAdded(marker: MyMarker) {\r\n    this.markerReady.next(marker)\r\n  }\r\n  markerRemoved(marker: MyMarker) {\r\n    this.markerRemove.next(marker)\r\n  }\r\n\r\n\r\n  getMarkerType(id: string): MarkerType {\r\n    return this.types.get(id)\r\n  }\r\n\r\n  update(me: Marker) {\r\n    this.updates.next(me)\r\n  }\r\n\r\n  getDefaultMarker(item: MapConfig): string {\r\n    if (item.defaultMarker) {\r\n      return item.defaultMarker\r\n    }\r\n\r\n    let mt = this.mapTypes.find(mt => mt.id == item.mapType)\r\n    if (mt && mt.defaultMarker) {\r\n      return mt.defaultMarker\r\n    }\r\n\r\n    return this.defaultMarker\r\n  }\r\n\r\n  getMarkerTypes(): Map<string, Icon> {\r\n    return this.markerTypes\r\n  }\r\n\r\n  saveMarker(m: MyMarker) {\r\n    let s = this.toSavedMarker(m)\r\n    console.log(s);\r\n    this.data.saveMarker(s)\r\n  }\r\n\r\n  deleteMarker(m: MyMarker) {\r\n    this.data.deleteMarker(this.toSavedMarker(m))\r\n  }\r\n\r\n  public toMyMarker(m: Marker): MyMarker {\r\n    return new MyMarker(m)\r\n  }\r\n\r\n\r\n  public fromSavedMarker(saved: SavedMarker): MyMarker {\r\n\r\n    // Get the Icon\r\n    let icn = this.markerTypes.get(saved.type)\r\n    if (icn == undefined) {\r\n      console.log(\"Cannot find Maerk Type with id of \" + saved.type);\r\n      return undefined\r\n    }\r\n\r\n    let loc = latLng(saved.location[0], saved.location[1])\r\n\r\n    // Generate the marker \r\n    let mk = marker(loc, { icon: icn, draggable: false })\r\n\r\n    let m = new MyMarker(mk)\r\n    m.id = saved.id\r\n    m.name = saved.name\r\n    m.type = saved.type\r\n    m.view = saved.view\r\n    m.edit = saved.edit\r\n    m.map = saved.map\r\n    m.mapLink = saved.mapLink\r\n    m.markerGroup = saved.markerGroup\r\n    m.description = saved.description\r\n\r\n    return m\r\n  }\r\n\r\n  public toSavedMarker(m: MyMarker): SavedMarker {\r\n    let location: [number, number] = [m.marker.getLatLng().lat, m.marker.getLatLng().lng]\r\n\r\n    let saved = new SavedMarker()\r\n    saved.id = m.id\r\n    saved.name = m.name\r\n    saved.description = m.description\r\n    saved.location = location\r\n    saved.type = m.type\r\n    saved.edit = m.edit\r\n    saved.view = m.view\r\n    saved.map = m.map\r\n    saved.mapLink = m.mapLink\r\n    saved.markerGroup = m.markerGroup\r\n    return saved\r\n  }\r\n}\r\n\r\nexport class MyMarker {\r\n  public static readonly TYPE = \"markers.MyMarker\";\r\n  objType = MyMarker.TYPE;\r\n\r\n  static is(obj: any): obj is MyMarker {\r\n    return obj.objType && obj.objType == MyMarker.TYPE\r\n  }\r\n\r\n  constructor(public m: Marker) { }\r\n\r\n  get marker(): Marker {\r\n    return this.m;\r\n  }\r\n  get id(): string {\r\n    return this.m[\"__id\"]\r\n  }\r\n  set id(myId: string) {\r\n    this.m[\"__id\"] = myId\r\n  }\r\n  get name(): string {\r\n    return this.m.options.title\r\n  }\r\n  set name(myName: string) {\r\n    this.m.options.title = myName\r\n  }\r\n  get description(): string {\r\n    return this.m[\"__description\"]\r\n  }\r\n  set description(my: string) {\r\n    this.m[\"__description\"] = my\r\n  }\r\n  get type(): string {\r\n    return this.m[\"__type\"]\r\n  }\r\n  set type(my: string) {\r\n    this.m[\"__type\"] = my\r\n  }\r\n  get markerGroup(): string {\r\n    return this.m[\"__markerGroup\"]\r\n  }\r\n  set markerGroup(my: string) {\r\n    this.m[\"__markerGroup\"] = my\r\n  }\r\n  get pageUrl(): string {\r\n    return this.m[\"__pageUrl\"]\r\n  }\r\n  set pageUrl(my: string) {\r\n    this.m[\"__pageUrl\"] = my\r\n  }\r\n  get mapLink(): string {\r\n    return this.m[\"__mapLink\"]\r\n  }\r\n  set mapLink(my: string) {\r\n    this.m[\"__mapLink\"] = my\r\n  }\r\n  get view(): string[] {\r\n    return this.m[\"__view\"]\r\n  }\r\n  set view(my: string[]) {\r\n    this.m[\"__view\"] = my\r\n  }\r\n  get edit(): string[] {\r\n    return this.m[\"__edit\"]\r\n  }\r\n  set edit(my: string[]) {\r\n    this.m[\"__edit\"] = my\r\n  }\r\n  get x(): number {\r\n    return this.m[\"__x\"]\r\n  }\r\n  set x(my: number) {\r\n    this.m[\"__x\"] = my\r\n  }\r\n  get y(): number {\r\n    return this.m[\"__y\"]\r\n  }\r\n  set y(my: number) {\r\n    this.m[\"__y\"] = my\r\n  }\r\n  get maxZoom(): number {\r\n    return this.m[\"__maxZoom\"]\r\n  }\r\n  set maxZoom(my: number) {\r\n    this.m[\"__maxZoom\"] = my\r\n  }\r\n  get minZoom(): number {\r\n    return this.m[\"__minZoom\"]\r\n  }\r\n  set minZoom(my: number) {\r\n    this.m[\"__minZoom\"] = my\r\n  }\r\n  get map(): string {\r\n    return this.m[\"__map\"]\r\n  }\r\n  set map(id: string) {\r\n    this.m[\"__map\"] = id\r\n  }\r\n  get selected(): boolean {\r\n    return this.m[\"__selected\"]\r\n  }\r\n  set selected(id: boolean) {\r\n    this.m[\"__selected\"] = id\r\n  }\r\n  get iconUrl(): string {\r\n    // console.log(\"this.m \" + this.m);\r\n    // console.log(\"this.m.options\" + this.m.options);\r\n    // console.log(\"this.m.options.icon \" + this.m.options.icon);\r\n    // console.log(\"this.m.options.icon.options \" + this.m.options.icon.options);\r\n    // console.log(\"this.m.options.icon.options.iconUrl \" + this.m.options.icon.options.iconUrl);\r\n    return this.m.options.icon.options.iconUrl\r\n  }\r\n}\r\n\r\nclass Category {\r\n  appliesTo: string[];\r\n  name: string\r\n  id: string\r\n  types: MarkerType[] = []\r\n}\r\n","module.exports = \".mapcontainer {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    z-index: 1;\\r\\n    background: #ffffff;\\r\\n}\\r\\n\\r\\n:host {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    top: 0;\\r\\n  }\"","module.exports = \"<div class=\\\"mapcontainer\\\" leaflet [leafletOptions]=\\\"options\\\" [leafletLayers]=\\\"layers\\\" (leafletMapReady)=\\\"onMapReady($event)\\\">\\r\\n</div>\"","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { latLngBounds, Layer, imageOverlay, CRS, Map as LeafletMap, LayerGroup, layerGroup, LeafletEvent, Marker, DomUtil } from 'leaflet';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { MapService, MyMarker } from '../map.service';\r\nimport { DataService } from '../data.service';\r\nimport { MapConfig, User, SavedMarker, Selection } from '../models';\r\nimport { flatten } from '@angular/compiler';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport * as L from 'leaflet';\r\nimport '../../../node_modules/leaflet.coordinates/dist/Leaflet.Coordinates-0.1.5.src.js';\r\nimport '../leaflet/box-select.js';\r\n\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent {\r\n  mapCfg: MapConfig\r\n  map: LeafletMap\r\n\r\n  bounds = latLngBounds([[0, 0], [1536, 2048]]);\r\n  mainMap = imageOverlay('./assets/missing.png', this.bounds);\r\n\r\n  options = {\r\n    zoom: 1,\r\n    minZoom: -2,\r\n    // maxZoom: 3,\r\n    continousWorld: false,\r\n    crs: CRS.Simple\r\n  };\r\n\r\n  layers: Layer[] = [];\r\n\r\n  currentSelection: Selection = new Selection([])\r\n\r\n  constructor(private zone: NgZone, private afAuth: AngularFireAuth,\r\n    private mapSvc: MapService, private data: DataService) {\r\n\r\n    this.mapSvc.mapConfig.pipe(\r\n      mergeMap((m: MapConfig) => {\r\n        this.mapCfg = m\r\n        return this.data.url(m)\r\n      })\r\n    ).subscribe(url => {\r\n      let bounds = latLngBounds([[0, 0], [this.mapCfg.height, this.mapCfg.width]]);\r\n      let mapLayer = imageOverlay(url, bounds)\r\n      this.layers.splice(0, this.layers.length)\r\n      this.layers.push(mapLayer)\r\n      this.layers.push(this.mapSvc.allMarkersLayer)\r\n      this.layers.push(this.mapSvc.newMarkersLayer)\r\n      this.mapSvc.fit(bounds)\r\n    })\r\n\r\n    this.mapSvc.selection.subscribe(sel => {\r\n      let removed = sel.removed(this.currentSelection)\r\n      let added = sel.added(this.currentSelection)\r\n      let same = sel.same(this.currentSelection)\r\n\r\n      removed.forEach(item => {\r\n        if (MyMarker.is(item)) {\r\n          item.selected = false\r\n          if (item.marker[\"_icon\"]) {\r\n            DomUtil.removeClass(item.marker[\"_icon\"], 'iconselected')\r\n          }\r\n        }\r\n      })\r\n      added.forEach(item => {\r\n        if (MyMarker.is(item)) {\r\n          item.selected = true\r\n          if (item.marker[\"_icon\"]) {\r\n            DomUtil.addClass(item.marker[\"_icon\"], 'iconselected')\r\n          }\r\n        }\r\n      })\r\n      this.currentSelection = sel\r\n    })\r\n  }\r\n\r\n  onMapReady(map: LeafletMap) {\r\n    this.map = map\r\n    // Install plugins\r\n    L.control.coordinates(\r\n      {\r\n        decimals: 2,\r\n        position: \"bottomleft\",\r\n        labelTemplateLat: \"Y: {y}\",\r\n        labelTemplateLng: \"X: {x}\",\r\n        enableUserInput: false\r\n      }\r\n    ).addTo(map);\r\n    // L.Map.addInitHook\r\n    // L.Map.addInitHook('addHandler', 'boxSelect', L.Map.BoxSelect);\r\n    // this.map.addHandler('boxSelect', L.BoxSelect)\r\n\r\n    this.zone.run(() => {\r\n      this.mapSvc.setMap(map);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".cat-style {\\r\\n    padding: 5px 2px;\\r\\n}\\r\\n\\r\\n.tree {\\r\\n    height: 500px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.member-list {\\r\\n    max-height: 400px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.selected {\\r\\n    outline: 2px solid blue;\\r\\n    outline: 5px auto -webkit-focus-ring-color;\\r\\n}\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">\\n    <fa-icon icon=\\\"users\\\" size=\\\"lg\\\"></fa-icon> Group Manager</h4>\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"delete()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Delete\\\">\\n      <fa-icon icon=\\\"trash-alt\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"newGroup()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"New Group\\\">\\n      <fa-icon icon=\\\"plus\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n  </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"tree col-3\\\">\\n        <ng-container *ngFor=\\\"let grp of groups\\\">\\n          <button [class.selected]=\\\"selected==grp\\\" class=\\\"dropdown-item btn-sm cat-style\\\" (click)=\\\"setGrp(grp)\\\">\\n            <fa-icon icon=\\\"users\\\" fixedWidth=\\\"true\\\"></fa-icon> {{grp.name}}</button>\\n        </ng-container>\\n      </div>\\n      <div class=\\\"col-9\\\">\\n        <ng-container *ngIf=\\\"selected\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Group Name\\\" [(ngModel)]=\\\"selected.name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea class=\\\"form-control form-control-sm\\\" rows=\\\"3\\\" id=\\\"description\\\" placeholder=\\\"Enter Description\\\" [(ngModel)]=\\\"selected.description\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Members</label>\\n            <div class=\\\"member-list\\\">\\n              <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of users\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{opt.uid}}\\\" [(checklist)]=\\\"members\\\" [checklistValue]=\\\"opt.uid\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"{{opt.uid}}\\\"> {{opt.name}}</label>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" aria-label=\\\"Close\\\" (click)=\\\"save()\\\">\\n            <fa-icon icon=\\\"save\\\" size=\\\"lg\\\"></fa-icon> Save\\n          </button>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { UserGroup, User } from '../models';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonDialogService } from '../dialogs/common-dialog.service';\n\n@Component({\n  selector: 'app-mgr-group',\n  templateUrl: './mgr-group.component.html',\n  styleUrls: ['./mgr-group.component.css']\n})\nexport class MgrGroupComponent implements OnInit {\n  groups : UserGroup[]= [] \n  users : User[] = []\n  members: string[] = []\n  selected : UserGroup\n\n  constructor(private data : DataService, private activeModal : NgbActiveModal, private cd : CommonDialogService) {\n    this.data.groups.subscribe( grps => {\n      this.groups = grps\n    })\n    this.data.users.subscribe( usrs => {\n      this.users = usrs\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  setGrp(g) {\n    let copy = JSON.parse( JSON.stringify(g))\n    this.selected = copy\n    console.log(this.selected);\n\n    if (this.selected.members) {\n      this.members = this.selected.members\n    } else {\n      this.members = []\n    }\n  }\n\n  newGroup() {\n    let g = new UserGroup()\n    g.name = \"New Group\"\n    \n    this.selected = g\n  }\n\n  save() {\n    this.selected.members = this.members\n    console.log(this.selected);\n    this.data.saveUserGroup(this.selected)\n  }\n\n  delete() {\n    if (this.selected) {\n      this.cd.confirm(\"Are you sure you want to delete \" + this.selected.name +\"?\", \"Confirm Delete\").subscribe( r => {\n        if (r) {\n          this.data.deleteUserGroup(this.selected)\n          this.selected = undefined\n        }\n      })\n    }\n  }\n}\n","module.exports = \".tree {\\r\\n    height: 500px;\\r\\n    overflow: auto;\\r\\n}\\r\\nh6 {\\r\\n    margin-top: .4em;\\r\\n}\\r\\n.cat-style {\\r\\n    padding: 5px 2px;\\r\\n}\\r\\n.auto {\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.selected {\\r\\n    outline: 2px solid blue;\\r\\n    outline: 5px auto -webkit-focus-ring-color;\\r\\n}\\r\\n.custom-file-upload {\\r\\n    border: 1px solid #ccc;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.inputfile {\\r\\n\\twidth: 0.1px;\\r\\n\\theight: 0.1px;\\r\\n\\topacity: 0;\\r\\n\\toverflow: hidden;\\r\\n\\tposition: absolute;\\r\\n\\tz-index: -1;\\r\\n}\\r\\n.file-div {\\r\\n    border: 3px solid rgb(150, 150, 150);\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    justify-content: center; /* align horizontal */\\r\\n    align-items: center; /* align vertical */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">\\n    <fa-icon icon=\\\"map-marker-alt\\\" size=\\\"lg\\\"></fa-icon> Map Manager</h4>\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"delete()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Delete\\\" [disabled]=\\\"!this.selected\\\">\\n      <fa-icon icon=\\\"trash-alt\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"newMap()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"New Map\\\" [disabled]=\\\"!this.selected\\\">\\n      <fa-icon icon=\\\"plus\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"newMapType()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"New Map Type\\\">\\n      <fa-icon icon=\\\"folder\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n    <button *ngIf=\\\"restricted == false\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"showAccess()\\\" placement=\\\"bottom\\\"\\n      ngbTooltip=\\\"Restrict Access (Not Restricted)\\\">\\n      <fa-icon icon=\\\"unlock\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n    <button *ngIf=\\\"restricted == true\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"showAccess()\\\" placement=\\\"bottom\\\"\\n      ngbTooltip=\\\"Restrict Access (Restricted)\\\">\\n      <fa-icon icon=\\\"lock\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n  </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"tree col-3\\\">\\n        <ng-container *ngFor=\\\"let mt of merged\\\">\\n          <div [class.selected]=\\\"selected==mt\\\" class=\\\"dropdown-item btn-sm cat-style noselect\\\" (click)=\\\"setType(mt)\\\" (dblclick)=\\\"isCollapsed[mt.name] = !isCollapsed[mt.name]\\\">\\n            <fa-icon class=\\\"pointer\\\" (click)=\\\"isCollapsed[mt.name] = !isCollapsed[mt.name]\\\" [fixedWidth]=\\\"true\\\" size=\\\"lg\\\" [icon]=\\\"isCollapsed[mt.name] ? 'caret-right' : 'caret-down'\\\"></fa-icon>{{mt.name}}\\n          </div>\\n          <div id=\\\"{{mt.name}}\\\" [ngbCollapse]=\\\"isCollapsed[mt.name]\\\">\\n            <button *ngFor=\\\"let m of mt.maps\\\" [class.selected]=\\\"selected==m\\\" class=\\\"dropdown-item btn-sm\\\" (click)=\\\"setMap(m)\\\">\\n              <fa-icon icon=\\\"map\\\" size=\\\"lg\\\"></fa-icon>\\n              {{m.name}}</button>\\n          </div>\\n        </ng-container>\\n      </div>\\n      <div class=\\\"col-9\\\">\\n        <ng-container *ngIf=\\\"selected\\\">\\n          <ng-container *ngIf=\\\"sType=='map'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Map Name\\\" [(ngModel)]=\\\"selected.name\\\">\\n              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">{{selected.id}}</small>\\n            </div>\\n            <div class=\\\"container-fluid\\\">\\n              <div class=\\\"row p-0\\\">\\n                <div class=\\\"col-6 p-0\\\">\\n                  <div class=\\\"form-group  mb-0\\\">\\n                    <label for=\\\"name\\\">Map Image</label>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"file\\\" class=\\\"custom-file-upload p-0\\\" (click)=\\\"getFile()\\\">\\n                      <canvas #mycanvas class=\\\"file-div\\\" src=\\\"./assets/missing.png\\\" width=\\\"150\\\"></canvas>\\n                    </label>\\n                    <input id=\\\"file\\\" #filecontrol type=\\\"file\\\" class=\\\"inputfile \\\" id=\\\"name\\\" accept=\\\".jpg,.png\\\" placeholder=\\\"select map image\\\"\\n                      (change)=\\\"setFile($event)\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-6 p-0\\\">\\n                  <div class=\\\"form-group mb-0\\\">\\n                    <label for=\\\"name\\\">Dimensions</label>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"dim\\\">Height</label>\\n                    <input id=\\\"dim\\\" type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Height\\\" [(ngModel)]=\\\"selected.height\\\">\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"dim\\\">Width</label>\\n                    <input id=\\\"dim\\\" type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Width\\\" [(ngModel)]=\\\"selected.width\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Default Marker</label>\\n              <app-marker-combo [(ngModel)]=\\\"selected.defaultMarker\\\" [map]=\\\"selected\\\"></app-marker-combo>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"description\\\">Description</label>\\n              <textarea class=\\\"form-control form-control-sm\\\" rows=\\\"3\\\" id=\\\"description\\\" placeholder=\\\"Enter Description\\\" [(ngModel)]=\\\"selected.description\\\"></textarea>\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"sType=='type'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Map Type Name\\\" [(ngModel)]=\\\"selected.name\\\">\\n              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">ID:{{selected.id}}</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Default Marker</label>\\n              <app-marker-combo [(ngModel)]=\\\"selected.defaultMarker\\\" [mapType]=\\\"selected\\\"></app-marker-combo>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Order</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Marker Name\\\" [(ngModel)]=\\\"selected.order\\\">\\n            </div>\\n          </ng-container>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" aria-label=\\\"Close\\\" (click)=\\\"save()\\\">\\n            <fa-icon icon=\\\"save\\\" size=\\\"lg\\\"></fa-icon> Save\\n          </button>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { CommonDialogService } from '../dialogs/common-dialog.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MergedMapType, MapConfig, MapType } from '../models';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { DialogService } from '../dialogs/dialog.service';\nimport { RestrictService } from '../dialogs/restrict.service';\n\n@Component({\n  selector: 'app-mgr-map',\n  templateUrl: './mgr-map.component.html',\n  styleUrls: ['./mgr-map.component.css']\n})\nexport class MgrMapComponent implements OnInit {\n  restricted : boolean = false\n  merged: MergedMapType[] = []\n  selected\n  isCollapsed = new Map<any, boolean>()\n  sType: string\n  result: ImageResult\n  thumbnail = \"./assets/missing.png\"\n  @ViewChild('filecontrol') fileButton\n  @ViewChild('mycanvas') canvas\n\n  constructor(private zone: NgZone, private activeModal: NgbActiveModal, private cd: CommonDialogService, private data: DataService, private dialog : RestrictService) {\n    this.data.mapTypesWithMaps.subscribe(items => {\n      this.merged = items\n    })\n  }\n\n  getFile() {\n    console.log(this.fileButton);\n    this.fileButton.nativeElement.click()\n  }\n\n  setFile(event) {\n    if (this.selected) {\n      let f = event.target.files[0]\n      this.processFile(f).subscribe(val => {\n        this.zone.run(() => {\n          this.result = val\n          this.selected.height = val.height\n          this.selected.width = val.width\n        })\n      })\n    }\n  }\n\n  processFile(f: File): Observable<ImageResult> {\n    console.log(\"Processing\");\n    // let thumbImg = this.myimagethumb\n    let bigCanvas = document.createElement('canvas')\n    let canvas = this.canvas.nativeElement\n    let result = new ImageResult()\n    let val = new ReplaySubject<ImageResult>()\n    let reader = new FileReader()\n    reader.readAsDataURL(f)\n\n    reader.onloadend = function () {\n      console.log(\"Load End\");\n\n      var url = reader.result\n      var img = new Image()\n      img.src = url\n\n      img.onload = function () {\n        console.log(\"On Load\");\n\n        bigCanvas.width = img.naturalWidth\n        bigCanvas.height = img.naturalHeight\n        bigCanvas.getContext('2d').drawImage(img, 0, 0)\n        bigCanvas.toBlob(b => result.image = b)\n\n        // set size proportional to image\n        let w = 150 * (img.width / img.height);\n        canvas.width = 150;\n        canvas.height = canvas.width * (img.height / img.width);\n\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        result.height = img.height\n        result.width = img.width\n        canvas.toBlob(b => result.thumb = b)\n\n        console.log(result);\n\n        val.next(result)\n      }\n    }\n    return val\n  }\n\n  save() {\n    if (this.selected) {\n      if (this.sType == 'map') {\n        if (this.result) {\n          this.data.saveMap(this.selected, this.result.image, this.result.thumb)\n        } else {\n          this.data.saveMap(this.selected)\n        }\n      } else {\n        console.log(this.selected);\n  \n        this.data.saveMapType(this.selected)\n      }\n    }\n  }\n\n  setType(t) {\n    this.restricted = false\n    this.selected = t\n    this.sType = 'type'\n  }\n\n  setMap(t) {\n    this.selected = t\n    this.sType = 'map'\n    this.restricted = this.data.isRestricted(this.selected)\n    this.data.url(this.selected).subscribe(\n      url => {\n        console.log(\"Got URL : \" + url);\n        this.thumbnail\n        this.loadImage(url)\n      }\n    )\n  }\n\n  loadImage(url: string) {\n    let canvas = this.canvas.nativeElement\n    let img = new Image()\n    img.src = url\n    img.onload = function () {\n      console.log(\"On Load\");\n\n      // set size proportional to image\n      let w = 150 * (img.width / img.height);\n      canvas.width = 150;\n      canvas.height = canvas.width * (img.height / img.width);\n\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  newMap() {\n    if (this.selected) {\n      let type = ''\n      if (this.sType == 'map') {\n        type = this.selected.mapType\n      } else {\n        type = this.selected.id\n      }\n\n      let map = new MapConfig()\n      map.mapType = type\n      map.id = UUID.UUID().toString()\n\n      console.log(map);\n      \n      this.sType = 'map'\n      this.selected = map\n\n      if (this.canvas) {\n        let canvas = this.canvas.nativeElement\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n    }\n  }\n\n  newMapType() {\n    let mt = new MapType()\n    mt.id = UUID.UUID().toString()\n    mt.name = \"New Map\"\n    mt.order = 1000\n\n    this.sType = 'type'\n    this.selected = mt\n  }\n\n  delete() {\n    if (this.sType = 'map') {\n      this.data.deleteMap(this.selected)\n    } else {\n      this.data.deleteMapType(this.selected)\n    }\n  }\n\n  showAccess() {\n    if (this.selected && this.sType == 'map') {\n      this.dialog.openRestrict(this.selected.view, this.selected.edit).subscribe( result => {\n        this.selected.view = result[0]\n        this.selected.edit = result[1]\n        console.log(this.selected);\n        this.restricted = this.data.isRestricted(this.selected)\n      })\n    }\n  }\n\n  escape(str : string) {\n    let newStr = JSON.stringify(str)\n    let newStr2 = newStr.substring(1, newStr.length-2)\n    return newStr2\n  }\n}\n\nclass ImageResult {\n  height: number\n  width: number\n  thumb: Blob\n  image: Blob\n}\n","module.exports = \".tree {\\r\\n    height: 500px;\\r\\n    overflow: auto;\\r\\n}\\r\\nh6 {\\r\\n    margin-top: .4em;\\r\\n}\\r\\n.cat-style {\\r\\n    padding: 5px 2px;\\r\\n}\\r\\n.auto {\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.selected {\\r\\n    outline: 2px solid blue;\\r\\n    outline: 5px auto -webkit-focus-ring-color;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">\\n    <fa-icon icon=\\\"map-marker-alt\\\" size=\\\"lg\\\"></fa-icon> Marker Manager</h4>\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"delete()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Delete\\\">\\n      <fa-icon icon=\\\"trash-alt\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"newMarkerType()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"New Marker Type\\\">\\n      <fa-icon icon=\\\"plus\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"newMarkerCategory()\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"New Category\\\">\\n      <fa-icon icon=\\\"folder\\\" size=\\\"lg\\\"></fa-icon>\\n    </button>\\n  </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"tree col-3\\\">\\n        <ng-container *ngFor=\\\"let cat of categories\\\">\\n          <!-- <button [class.selected]=\\\"selected==cat\\\" class=\\\"dropdown-item btn-sm cat-style\\\" (click)=\\\"setCat(cat)\\\" (dblclick)=\\\"isCollapsed[cat.name] = !isCollapsed[cat.name]\\\">{{cat.name}}</button> -->\\n          <div [class.selected]=\\\"selected==cat\\\" class=\\\"dropdown-item btn-sm cat-style noselect\\\" (click)=\\\"setCat(cat)\\\" (dblclick)=\\\"isCollapsed[cat.name] = !isCollapsed[cat.name]\\\"><fa-icon (click)=\\\"isCollapsed[cat.name] = !isCollapsed[cat.name]\\\" [fixedWidth]=\\\"true\\\" size=\\\"lg\\\" [icon]=\\\"isCollapsed[cat.name] ? 'caret-right' : 'caret-down'\\\"></fa-icon> {{cat.name}}</div>\\n          <div id=\\\"{{cat}}\\\" [ngbCollapse]=\\\"isCollapsed[cat.name]\\\">\\n            <button *ngFor=\\\"let t of cat.types\\\" [class.selected]=\\\"selected==t\\\" class=\\\"dropdown-item btn-sm\\\" (click)=\\\"setType(t)\\\">\\n              <img [src]=\\\"t.url\\\" height=30> {{t.name}}</button>\\n          </div>\\n        </ng-container>\\n      </div>\\n      <div class=\\\"col-9\\\">\\n        <ng-container *ngIf=\\\"selected\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Enter Category Name\\\" [(ngModel)]=\\\"selected.name\\\">\\n            <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">{{selected.id}}</small>\\n          </div>\\n          <ng-container *ngIf=\\\"sType=='cat'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Applies To:</label>\\n              <div class=\\\"member-list\\\">\\n                  <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let opt of mapTypes\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{opt.id}}\\\" [(checklist)]=\\\"selected.appliesTo\\\" [checklistValue]=\\\"opt.id\\\">\\n                    <label class=\\\"custom-control-label\\\" for=\\\"{{opt.id}}\\\"> {{opt.name}}</label>\\n                  </div>\\n                </div>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Category Image</label>\\n              <input type=\\\"file\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"select category image\\\" (change)=\\\"setFile($event)\\\">\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"sType=='type'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Icon</label>\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"select icon file\\\" (change)=\\\"setFile($event)\\\" accept=\\\"image/png\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Size</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Height, Width\\\" [(ngModel)]=\\\"selected.iconSize\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Anchor</label>\\n              <input type=\\\"text\\\" class=\\\"form-control \\\" id=\\\"name\\\" placeholder=\\\"Height, Width\\\" [(ngModel)]=\\\"selected.iconAnchor\\\">\\n            </div>\\n          </ng-container>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" aria-label=\\\"Close\\\" (click)=\\\"save()\\\">\\n            <fa-icon icon=\\\"save\\\" size=\\\"lg\\\"></fa-icon> Save\\n          </button>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonDialogService } from '../dialogs/common-dialog.service';\nimport { DataService } from '../data.service';\nimport { MarkerType, MarkerCategory, MapType } from '../models';\nimport { UUID } from 'angular2-uuid';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { MapService } from '../map.service';\n\n@Component({\n  selector: 'app-mgr-marker',\n  templateUrl: './mgr-marker.component.html',\n  styleUrls: ['./mgr-marker.component.css']\n})\nexport class MgrMarkerComponent implements OnInit {\n  isCollapsed = new Map<any, boolean>()\n  selected\n  categories = [];\n  sType : string\n  mapTypes : MapType[] = []\n\n  constructor(private mapSvc : MapService, private activeModal : NgbActiveModal, private cd : CommonDialogService, private data : DataService) { \n    this.mapSvc.catsLoaded.subscribe( v => {\n      this.categories = this.mapSvc.categories\n    })\n    this.data.mapTypes.subscribe( types => this.mapTypes = types )\n  }\n\n  ngOnInit() {\n  }\n\n  setFile(event) {\n    if (this.selected) {\n      let f = event.target.files[0]\n      this.selected[\"__FILE\"] = f\n      this.getDimensions(f).subscribe( val => {\n        this.selected.iconSize = val\n        this.selected.iconAnchor = [Math.round(val[0]/2), val[1]]\n      })\n      console.log(\"FILE\")\n      console.log( this.selected[\"__FILE\"]);\n    }\n  }\n\n  getDimensions(f : File) : Observable<[number, number]> {\n    let val = new ReplaySubject<[number, number]> ()\n    let reader = new FileReader()\n    reader.readAsDataURL(f)\n      reader.onloadend = function() {\n        var url = reader.result\n        var img = new Image()\n        img.src = url\n        img.onload=function(){\n          val.next([img.width, img.height])\n      }\n    }\n    return val\n  }\n\n\n  delete() {\n    if (this.sType == 'cat') {\n      if (this.selected.types.length > 0) {\n        this.cd.confirm(\"Are you sure you want to delete \" + this.selected.name +\"? If you do then you will not be able to access the markers in this category any longer. Don't worry existing markers will continue to work.\", \"Confirm Delete\").subscribe(\n          r => {\n            if (r) {\n              this.data.deleteMarkerCategory(this.selected)\n            }\n          }\n        )\n      } else {\n        this.data.deleteMarkerCategory(this.selected)\n      }\n    } else {\n      this.cd.confirm(\"Are you sure you want to delete \" + this.selected.name +\"? If you do then you will not be able to display markers of this type.\", \"Confirm Delete\").subscribe(\n        r => {\n          if (r) {\n            this.data.deleteMarkerType(this.selected)\n          }\n        }\n      )\n    }\n  }\n\n  newMarkerCategory() {\n    this.sType = 'cat'\n\n    let item = new MarkerCategory() \n    item.id = UUID.UUID().toString()\n    item.name = \"New Category\"\n    this.selected = item\n  }\n\n  newMarkerType() {\n    if (this.selected) {\n      let cat = ''\n      if (this.sType == 'cat') {\n        cat = this.selected.id\n      } else {\n        cat = this.selected.category\n      }\n\n      this.sType = 'type'\n\n      let item = new MarkerType() \n      item.id = UUID.UUID().toString()\n      item.category = cat\n      item.name = \"New Type\"\n\n      this.selected = item\n    }\n  }\n\n\n  save() {\n    console.log(\"SAVING\");\n    console.log(this.selected);\n    \n    if (this.sType == 'cat') {\n      this.data.saveMarkerCategory(this.selected)\n    } else {\n      this.selected.iconSize = this.split(this.selected.iconSize)\n      this.selected.iconAnchor = this.split(this.selected.iconAnchor)\n      this.data.saveMarkerType(this.selected)\n    }\n  }\n\n  split(item : any) : [number, number] {\n    if (typeof(item) == 'string') {\n      let items = item.split(\",\")\n      let lat = +items[0]\n      let lng = +items[1]\n      return [lat, lng]\n    } else {\n      return item\n    }\n  }\n\n  setType(t) {\n    this.selected = t\n    this.sType = 'type'\n  }\n  setCat(t) {\n    this.selected = t\n    this.sType = 'cat'\n  }\n}\n","import { UUID } from \"angular2-uuid\";\r\nimport { User as FireUser } from 'firebase';\r\n\r\n/**\r\n * A user in the\r\n */\r\nexport class User {\r\n    name: string\r\n    email?: string\r\n    uid: string\r\n    photo?: string\r\n    groups?: string[]\r\n\r\n    isAdmin(): boolean {\r\n        return this.groups.includes(\"admin\")\r\n    }\r\n\r\n    constructor() {\r\n        this.name = \"no one\"\r\n        this.uid = \"NOBODY\"\r\n    }\r\n\r\n    static fromFireUser(fireUser: FireUser) {\r\n        var u = new User()\r\n        if (fireUser !== null) {\r\n            console.log(\"Logged in user : \" + fireUser.uid);\r\n\r\n            u.uid = fireUser.uid\r\n            u.name = fireUser.displayName\r\n            u.email = fireUser.email\r\n            u.photo = fireUser.photoURL\r\n        } else {\r\n            console.log(\"No User loged in\");\r\n        }\r\n\r\n        return u\r\n    }\r\n}\r\n\r\n/** \r\n * A Marker Category is a group that markers are placed into. \r\n*/\r\nexport class MarkerCategory {\r\n    id: string\r\n    name: string\r\n    icon?: string\r\n    appliesTo: string[]\r\n}\r\n\r\n/**\r\n * A Marker Type is a type of marker that can be placed. This type brings with it the icon and category\r\n */\r\nexport class MarkerType {\r\n    id: string\r\n    name: string\r\n    category: string\r\n    iconSize: [number, number]\r\n    iconAnchor: [number, number]    // point of the icon which will correspond to marker's location\r\n    url?: string\r\n}\r\n\r\nexport class SavedMarker {\r\n    id: string\r\n    map: string\r\n    name: string\r\n    description?: string\r\n    type: string\r\n    markerGroup: string\r\n    mapLink: string\r\n    location: [number, number]\r\n    view: string[]\r\n    edit: string[]\r\n}\r\n\r\n\r\n/**\r\n * A type of map. For example: World / Continent, City / Town, Building Interior, \r\n */\r\nexport class MapType {\r\n    id: string\r\n    name: string\r\n    order: number\r\n    defaultMarker?: string\r\n}\r\n\r\n/**\r\n * A configuration for a map.\r\n */\r\nexport class MapConfig {\r\n    id: string\r\n    mapType: string\r\n    name: string\r\n    description?: string\r\n    defaultMarker?: string\r\n    image: string  /// Calculated\r\n    thumb: string   /// Calculated\r\n    width: number   /// Calculated\r\n    height: number  /// Calculated\r\n    view: string[]\r\n    edit: string[]\r\n}\r\n\r\nexport class UserGroup implements IObjectType {\r\n    public static readonly TYPE = 'db.UserGroup'\r\n    public static readonly SAMPLE = new UserGroup()\r\n\r\n    // TypeScript guard\r\n    static is(obj: any): obj is UserGroup {\r\n        return obj.objType !== undefined && obj.objType === UserGroup.TYPE\r\n    }\r\n\r\n    readonly objType: string = UserGroup.TYPE\r\n    name: string\r\n    description?: string\r\n    members: string[]\r\n}\r\n\r\nexport class MergedMapType {\r\n    id: string\r\n    name: string\r\n    order: number\r\n    defaultMarker: string\r\n    maps: MapConfig[]\r\n}\r\n\r\nexport interface IObjectType {\r\n    objType: string\r\n}\r\n\r\nexport interface IDbItem {\r\n    id: string\r\n    name: string\r\n    description: string\r\n}\r\n\r\nexport interface IRestrictedItem {\r\n    edit: string[]\r\n    view: string[]\r\n}\r\n\r\nexport class MarkerGroup implements IRestrictedItem, IDbItem, IObjectType {\r\n    public static readonly TYPE = 'db.MarkerGroup'\r\n    public static readonly FOLDER = 'markerGroups'\r\n    public static readonly SAMPLE = {\r\n        objType: '',\r\n        id: 'string',\r\n        name: 'string',\r\n        description: 'string',\r\n        map: 'string',\r\n        edit: [],\r\n        view: [],\r\n    }\r\n\r\n    // TypeScript guard\r\n    static is(obj: any): obj is MarkerGroup {\r\n        return obj.objType !== undefined && obj.objType === MarkerGroup.TYPE\r\n    }\r\n\r\n    static dbPath(obj: MarkerGroup): string {\r\n        return MarkerGroup.FOLDER + '/' + obj.map + \"/\" + obj.id\r\n    }\r\n\r\n    readonly objType: string = MarkerGroup.TYPE\r\n    id: string\r\n    name: string\r\n    description: string\r\n    map: string\r\n    edit: string[]\r\n    view: string[]\r\n}\r\n\r\nexport class Selection {\r\n    public static readonly MARKER = 'marker'\r\n\r\n    constructor(public items: any[], public type?: string) {\r\n        console.log(\"Created Select of \" + this.items.length);\r\n    }\r\n\r\n    public get first(): any {\r\n        if (this.items && this.items.length > 0) {\r\n            return this.items[0]\r\n        }\r\n    }\r\n\r\n    public isEmpty() {\r\n        return !(this.items && this.items.length > 0)\r\n    }\r\n\r\n    public removed(previous: Selection): any[] {\r\n        let found = previous.items.filter(prevItem => !this.items.includes(prevItem))\r\n        if (found) {\r\n            return found\r\n        }\r\n        return []\r\n    }\r\n    public added(previous: Selection): any[] {\r\n        let found = this.items.filter(item => !previous.items.includes(item))\r\n        if (found) {\r\n            return found\r\n        }\r\n        return []\r\n    }\r\n    public same(previous: Selection): any[] {\r\n        let found = previous.items.filter(prevItem => this.items.includes(prevItem))\r\n        if (found) {\r\n            return found\r\n        }\r\n        return []\r\n    }\r\n}\r\n\r\nexport class UserPreferences {\r\n    public static readonly TYPE = 'db.UserPreferences'\r\n    public static readonly FOLDER = 'userPreferences'\r\n    public static readonly SAMPLE = {\r\n        objType: '',\r\n        uid: 'string',\r\n        maps: {},\r\n        recentMarkers: [],\r\n        recentMaps: [],\r\n        assumedGroups: []\r\n    }\r\n\r\n    // TypeScript guard\r\n    static is(obj: any): obj is UserPreferences {\r\n        return obj.objType !== undefined && obj.objType === UserPreferences.TYPE\r\n    }\r\n\r\n    static dbPath(obj: UserPreferences): string {\r\n        return UserPreferences.FOLDER + '/' + obj.uid\r\n    }\r\n    static pathTo(userId: string): string {\r\n        return UserPreferences.FOLDER + '/' + userId\r\n    }\r\n\r\n    getMapPref(mapId: string): MapPrefs {\r\n        if (!this.maps) {\r\n            this.maps = new Map<string, MapPrefs>()\r\n        }\r\n\r\n        if (!this.maps[mapId]) {\r\n            let mp = new MapPrefs()\r\n            mp.mapId = mapId\r\n            this.maps[mapId] = new MapPrefs()\r\n        }\r\n        return this.maps[mapId]\r\n    }\r\n\r\n    isHiddenMarker(mapId: string, markerId: string): boolean {\r\n        let mp = this.getMapPref(mapId)\r\n        if (mp.hiddenMarkers) {\r\n            return mp.hiddenMarkers.includes(markerId)\r\n        }\r\n        return false\r\n    }\r\n\r\n    isHiddenGroup(mapId: string, groupId: string): boolean {\r\n        let mp = this.getMapPref(mapId)\r\n        if (mp.hiddenGroups) {\r\n            return mp.hiddenGroups.includes(groupId)\r\n        }\r\n        return false\r\n    }\r\n\r\n    readonly objType: string = UserPreferences.TYPE\r\n\r\n    uid: string\r\n    maps = {}\r\n    recentMarkers?: string[]\r\n    recentMaps?: string[]\r\n    assumedGroups?: string[]\r\n\r\n}\r\n\r\nexport class MapPrefs {\r\n    mapId: string\r\n    hiddenGroups: string[] = []\r\n    hiddenMarkers: string[] = []\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifyService {\n\n  success(message: any): any {\n    console.log(message);\n  }\n  constructor() { }\n\n  showError(error : string, operation? : string, code? : number) {\n    console.log(\"ERRORS: \" + error);\n  }\n}\n","module.exports = \".admin-btn {\\r\\n    width: 90%;\\r\\n    margin-bottom: .5em;\\r\\n}\\r\\n\\r\\n.centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n\\r\\n}\"","module.exports = \"<h4>Adminstration</h4>\\r\\n\\r\\n<div class=\\\"centered\\\">\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-secondary admin-btn\\\" (click)=\\\"openMarker()\\\"><fa-icon icon=\\\"map-marker-alt\\\" fixedWidth=\\\"true\\\"></fa-icon> Marker Manager</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-secondary admin-btn\\\" (click)=\\\"openMap()\\\"><fa-icon icon=\\\"map\\\" fixedWidth=\\\"true\\\"></fa-icon> Maps Manager</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-secondary admin-btn\\\" (click)=\\\"openGroup()\\\"><fa-icon icon=\\\"user\\\" fixedWidth=\\\"true\\\"></fa-icon> Group Manager</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DialogService } from '../../dialogs/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(private dialogs : DialogService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openMarker(){\r\n    this.dialogs.openMarkers()\r\n  }\r\n  openMap() {\r\n    this.dialogs.openMaps()\r\n  }\r\n  openGroup() {\r\n    this.dialogs.openGroups()\r\n  }\r\n}\r\n","module.exports = \".pack {\\r\\n    display: flex;\\r\\n    flex-direction: row\\r\\n}\\r\\n.temph {\\r\\n    /* max-height: 200px; */\\r\\n}\\r\\n.scroll-v {\\r\\n    overflow: auto;\\r\\n}\\r\\n#style-1::-webkit-scrollbar-track\\r\\n{\\r\\n    width: 8px;  /* for vertical scrollbars */\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\t/* border-radius: 10px; */\\r\\n    background-color: rgba(0, 0, 0, .8);\\r\\n}\\r\\n#style-1::-webkit-scrollbar\\r\\n{\\r\\n\\twidth: 12px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n#style-1::-webkit-scrollbar-thumb\\r\\n{\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #555;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<h4>Layers</h4>\\r\\n<small class=\\\"form-text text-muted mb-2\\\">Select the data to show on the map</small>\\r\\n\\r\\n<div id=\\\"style-1\\\" class=\\\"scroll-v \\\">\\r\\n    <ng-container *ngFor=\\\"let g of groups\\\">\\r\\n        <div class=\\\"pack\\\">\\r\\n            <fa-icon (click)=\\\"isCollapsed[g.id] = !isCollapsed[g.id]\\\" [fixedWidth]=\\\"true\\\" size=\\\"lg\\\" [icon]=\\\"isCollapsed[g.id] ? 'caret-right' : 'caret-down'\\\"></fa-icon>\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{g.id}}\\\" [(unchecklist)]=\\\"shownGroups\\\" [unchecklistValue]=\\\"g.id\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"{{g.id}}\\\">{{g.name}}</label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [ngbCollapse]=\\\"isCollapsed[g.id]\\\" class=\\\"ml-5\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let m of getMarkers(g)\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{m.id}}\\\" [(unchecklist)]=\\\"shownMarkers\\\" [unchecklistValue]=\\\"m.id\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"{{m.id}}\\\"> {{m.name}}</label>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"pack\\\">\\r\\n        <fa-icon (click)=\\\"isCollapsed['UNGROUPED'] = !isCollapsed['UNGROUPED']\\\" [fixedWidth]=\\\"true\\\" size=\\\"lg\\\" [icon]=\\\"isCollapsed['UNGROUPED'] ? 'caret-right' : 'caret-down'\\\"></fa-icon>\\r\\n        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"U\\\" [(unchecklist)]=\\\"shownGroups\\\" [unchecklistValue]=\\\"'UNGROUPED'\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"U\\\">Ungrouped</label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div [ngbCollapse]=\\\"isCollapsed['UNGROUPED']\\\" class=\\\"ml-5\\\">\\r\\n        <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let m of getUngroupedMarkers(g)\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{m.id}}\\\" [(unchecklist)]=\\\"shownMarkers\\\" [unchecklistValue]=\\\"m.id\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"{{m.id}}\\\"> {{m.name}}</label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapService, MyMarker } from '../../map.service';\r\nimport { Map as LeafletMap, LayerGroup } from 'leaflet';\r\nimport { delay, mergeMap, map as rxmap, map } from 'rxjs/operators';\r\nimport { ITreeOptions } from 'angular-tree-component';\r\nimport { ITreeNode } from 'angular-tree-component/dist/defs/api';\r\nimport { MapConfig, MarkerGroup, SavedMarker, UserPreferences, MapPrefs } from '../../models';\r\nimport { DataService } from '../../data.service';\r\nimport { combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-layers-tab',\r\n  templateUrl: './layers-tab.component.html',\r\n  styleUrls: ['./layers-tab.component.css']\r\n})\r\nexport class LayersTabComponent implements OnInit {\r\n  prefs: UserPreferences\r\n  map: LeafletMap\r\n  mapConfig: MapConfig\r\n  groups: MarkerGroup[] = []\r\n  markers: SavedMarker[] = []\r\n  layers = []\r\n  items = []\r\n  groupIds = []\r\n  markerIds = []\r\n\r\n  isCollapsed = {}\r\n  options: ITreeOptions = {\r\n    useCheckbox: true\r\n  };\r\n\r\n  constructor(private mapSvc: MapService, private data: DataService) {\r\n    this.mapSvc.map\r\n      .subscribe(m => {\r\n        this.map = m\r\n        this.layers = this.mapSvc.layers\r\n      })\r\n\r\n    let prefObs = this.data.userPrefs.pipe(\r\n      map(prefs => this.prefs = prefs)\r\n    )\r\n\r\n    let mapObs = this.mapSvc.mapConfig.pipe(\r\n      map(mapConfig => this.mapConfig = mapConfig)\r\n    )\r\n\r\n    let allObs = this.mapSvc.mapConfig\r\n      .pipe(\r\n        mergeMap(mapConfig => {\r\n          this.mapConfig = mapConfig;\r\n          return this.data.getMarkerGroups(mapConfig.id)\r\n        }),\r\n        mergeMap(groups => {\r\n          this.groups = groups\r\n          this.groups.forEach(g => {\r\n            this.isCollapsed[g.id] = true\r\n          })\r\n          this.isCollapsed[MapService.UNCATEGORIZED] = true\r\n\r\n          return this.data.getMarkers(this.mapConfig.id)\r\n        }),\r\n        map(marks => {\r\n          this.markers = marks\r\n        })\r\n      )\r\n\r\n\r\n    combineLatest(prefObs, allObs)\r\n      .subscribe(() => {\r\n        this._shownGroups = this.prefs.getMapPref(this.mapConfig.id).hiddenGroups\r\n        this._shownMarkers = this.prefs.getMapPref(this.mapConfig.id).hiddenMarkers\r\n        console.log(\"ALL DONE\");\r\n      })\r\n\r\n  }\r\n\r\n  getMarkers(g: MarkerGroup): SavedMarker[] {\r\n    return this.markers.filter(m => {\r\n      if (m.markerGroup) {\r\n        return m.markerGroup == g.id\r\n      }\r\n      return false;\r\n    })\r\n  }\r\n\r\n  getUngroupedMarkers(): SavedMarker[] {\r\n    return this.markers.filter(m => {\r\n      if (m.markerGroup) {\r\n        return false\r\n      }\r\n      return true;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  name(item) {\r\n    if (item.options && item.options.title) {\r\n      return item.options.title\r\n    }\r\n    if (item['__name']) {\r\n      return item['__name']\r\n    }\r\n    return '--unknown--'\r\n  }\r\n\r\n  id(item) {\r\n    if (item['__id']) {\r\n      return item['__id']\r\n    }\r\n    return this.name(item)\r\n  }\r\n\r\n  isFeatureGroup(item: any): item is LayerGroup {\r\n    console.log(item);\r\n\r\n    return item.eachLayer\r\n  }\r\n\r\n  activate(event) {\r\n    console.log(event);\r\n    let me: ITreeNode = event.node\r\n    if (me) {\r\n      let item = me.data.data\r\n      if (item['__id']) {\r\n        let m = new MyMarker(item)\r\n        this.mapSvc.panTo(item['_latlng'])\r\n      }\r\n    }\r\n  }\r\n\r\n  groupCheckChange($event) {\r\n    console.log($event);\r\n    // this.shownGroups = $event\r\n    if (this.prefs) {\r\n      let mPrefs = this.prefs.getMapPref(this.mapConfig.id)\r\n      mPrefs.hiddenGroups = $event\r\n      console.log(\"Hidden Groups\")\r\n      console.log(mPrefs.hiddenGroups);\r\n      this.data.save(this.prefs)\r\n    }\r\n  }\r\n\r\n  markerCheckChange($event) {\r\n    console.log($event);\r\n\r\n    if (this.prefs) {\r\n      if (!this.prefs.maps) {\r\n        this.prefs.maps = new Map<string, MapPrefs>()\r\n      }\r\n      let mPrefs = this.prefs.getMapPref(this.mapConfig.id)\r\n      mPrefs.hiddenMarkers = $event\r\n      console.log(\"Hidden Markers\")\r\n      console.log(mPrefs.hiddenMarkers);\r\n      this.data.save(this.prefs)\r\n    }\r\n  }\r\n\r\n  diff<T>(all: T[], some: T[]): T[] {\r\n    return all.filter(allItem => !some.includes(allItem))\r\n  }\r\n\r\n  _shownGroups = []\r\n  _shownMarkers = []\r\n\r\n  set shownGroups(v: any[]) {\r\n    this._shownGroups = v\r\n    this.groupCheckChange(v)\r\n  }\r\n\r\n  set shownMarkers(v: any[]) {\r\n    this._shownMarkers = v\r\n    this.markerCheckChange(v)\r\n  }\r\n\r\n  get shownGroups(): any[] {\r\n    return this._shownGroups\r\n  }\r\n\r\n  get shownMarkers(): any[] {\r\n    return this._shownMarkers\r\n  }\r\n}\r\n","module.exports = \".scroller {\\r\\n    overflow: auto\\r\\n}\\r\\n.map-item {\\r\\n    display: block;\\r\\n    cursor: pointer;\\r\\n    /* float: left; */\\r\\n}\\r\\n.map-title{\\r\\n    display: block;\\r\\n}\"","module.exports = \"<div>\\r\\n  Map\\r\\n</div>\\r\\n<div class=\\\"white scroller\\\" *ngIf=\\\"merged\\\">\\r\\n  <div *ngFor=\\\"let mt of merged \\\">\\r\\n    <h4>{{mt.name}}</h4>\\r\\n    <div class=\\\"map-item\\\" *ngFor=\\\"let m of mt.maps\\\">\\r\\n      <ng-container>\\r\\n        <!-- <img src=\\\"./assets/missing.png\\\" height=\\\"100\\\"> -->\\r\\n        <img [src]='m.thumb' width=\\\"150\\\" (click)=\\\"select(m)\\\">\\r\\n        <span class=\\\"map-title\\\">{{m.name}}</span>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { MapType, MapConfig, MergedMapType } from '../../models';\r\nimport { DataService } from '../../data.service';\r\nimport { MapService } from '../../map.service';\r\n\r\n@Component({\r\n  selector: 'app-map-selector',\r\n  templateUrl: './map-selector.component.html',\r\n  styleUrls: ['./map-selector.component.css']\r\n})\r\nexport class MapSelectorComponent implements OnInit {\r\n  merged: Array<MergedMapType>\r\n\r\n  constructor(private data: DataService, private mapSvc: MapService) {\r\n    this.data.mapTypesWithMaps.subscribe(items => {\r\n      this.merged = items\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  select(map: MapConfig) {\r\n    this.mapSvc.setConfig(map)\r\n    this.data.saveRecentMap(map.id)\r\n  }\r\n\r\n  getUrl(map: MapConfig): Observable<string> {\r\n    return this.data.url(map);\r\n  }\r\n}\r\n","module.exports = \".editbtn {\\r\\n    position: absolute;\\r\\n    left: 40px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.checkbtn {\\r\\n    position: absolute;\\r\\n    left: 10px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.closebtn {\\r\\n    position: absolute;\\r\\n    left: 40px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.newbtn {\\r\\n    position: absolute;\\r\\n    left: 10px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.deletebtn {\\r\\n    position: absolute;\\r\\n    left: 70px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.unlockbtn {\\r\\n    position: absolute;\\r\\n    left: 100px;\\r\\n    top: 10px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.lockbtn {\\r\\n    position: absolute;\\r\\n    left: 100px;\\r\\n    top: 10px;\\r\\n    color: red;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.marker-container {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    text-align: center;\\r\\n    font-size: 14pt;\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n    margin: 10px 10px, 0px, 10px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n    text-align: center;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.type {\\r\\n    text-align: center;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.page {\\r\\n    margin-top: 10px;\\r\\n    text-align: center;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.coords {\\r\\n    margin-top: 10px;\\r\\n    text-align: center;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.centered {\\r\\n    display: block;\\r\\n    margin: 0 auto ;\\r\\n}\\r\\n\\r\\n.edit-container {\\r\\n    position: absolute;\\r\\n    top: 70px;\\r\\n}\\r\\n\\r\\nlabel.small {\\r\\n    font-size: .8em;\\r\\n    margin-bottom: 4px;\\r\\n}\\r\\n\\r\\n.icon-flow {\\r\\n    padding: .2em;\\r\\n    width: 30px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.icon-holder {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.dh {\\r\\n    white-space: normal;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"white\\\">\\r\\n  <fa-icon icon=\\\"pencil-alt\\\" size=\\\"lg\\\" (click)=\\\"editstart()\\\" class=\\\"editbtn\\\" *ngIf=\\\"edit==false\\\"></fa-icon>\\r\\n  <fa-icon icon=\\\"check\\\" size=\\\"lg\\\" (click)=\\\"save()\\\" class=\\\"checkbtn\\\" *ngIf=\\\"edit==true\\\"></fa-icon>\\r\\n  <fa-icon icon=\\\"times\\\" size=\\\"lg\\\" (click)=\\\"cancel()\\\" class=\\\"closebtn\\\" *ngIf=\\\"edit==true\\\"></fa-icon>\\r\\n  <fa-icon icon=\\\"plus\\\" size=\\\"lg\\\" (click)=\\\"newMarker()\\\" class=\\\"newbtn\\\" *ngIf=\\\"edit==false\\\"></fa-icon>\\r\\n  <fa-icon icon=\\\"trash-alt\\\" size=\\\"lg\\\" (click)=\\\"delete()\\\" class=\\\"deletebtn\\\"></fa-icon>\\r\\n  <fa-icon *ngIf=\\\"restricted == true\\\" icon=\\\"lock\\\" size=\\\"lg\\\" (click)=\\\"permissions()\\\" class=\\\"lockbtn\\\"></fa-icon>\\r\\n  <fa-icon *ngIf=\\\"restricted == false\\\" icon=\\\"unlock\\\" size=\\\"lg\\\" (click)=\\\"permissions()\\\" class=\\\"unlockbtn\\\"></fa-icon>\\r\\n\\r\\n  <ng-container *ngIf=\\\"marker\\\">\\r\\n    <div class=\\\"marker-container\\\" *ngIf=\\\"edit==false\\\">\\r\\n      <img [src]=\\\"marker?.iconUrl\\\" class=\\\"centered  mt-4  iconselected\\\">\\r\\n      <span class=\\\"title\\\">{{marker?.name}}</span>\\r\\n      <span class=\\\"type\\\">{{name()}}</span>\\r\\n      <span class=\\\"description\\\">{{marker?.description}}</span>\\r\\n      <a href=\\\"{{marker?.pageUrl}}\\\">{{marker?.pageUrl}}</a>\\r\\n      <a href=\\\"#\\\" class=\\\"coords\\\" (click)=\\\"pan()\\\">{{marker?.marker._latlng.lat}}, {{marker?.marker._latlng.lng}}</a>\\r\\n      <button *ngIf=\\\"marker.mapLink \\\" type=\\\"button\\\" class=\\\"btn btn-outline-secondary admin-btn mt-2\\\" (click)=\\\"openLinkedMap()\\\">\\r\\n        <fa-icon icon=\\\"map\\\" fixedWidth=\\\"true\\\"></fa-icon> Open Linked Map</button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"edit==true\\\">\\r\\n      <img [src]=\\\"marker?.iconUrl\\\" class=\\\"centered mt-4 iconselected\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"small\\\">Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"name\\\" placeholder=\\\"Enter Marker Name\\\" [(ngModel)]=\\\"marker.name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"type\\\" class=\\\"small\\\">Type</label>\\r\\n        <app-marker-combo [(ngModel)]=\\\"marker.type\\\" [map]=\\\"map\\\"></app-marker-combo>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"type\\\" class=\\\"small\\\">Group</label>\\r\\n        <app-marker-group-combo [(ngModel)]=\\\"marker.markerGroup\\\" [marker]=\\\"marker\\\"></app-marker-group-combo>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"mapLink\\\" class=\\\"small\\\">Map Link</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"mapLink\\\" [(ngModel)]=\\\"marker.mapLink\\\">\\r\\n          <optgroup *ngFor=\\\"let mt of merged\\\" [label]=\\\"mt.name\\\">\\r\\n            <option *ngFor=\\\"let map of mt.maps\\\" [value]=\\\"map.id\\\">{{map.name}}</option>\\r\\n          </optgroup>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"description\\\" class=\\\"small\\\">Description</label>\\r\\n        <textarea class=\\\"form-control form-control-sm\\\" rows=\\\"3\\\" id=\\\"description\\\" placeholder=\\\"Enter Description\\\" [(ngModel)]=\\\"marker.description\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapService, MyMarker } from '../../map.service';\r\nimport { CommonDialogService } from '../../dialogs/common-dialog.service';\r\nimport { MarkerType, MapConfig, MarkerGroup, MergedMapType } from '../../models';\r\nimport { RestrictService } from '../../dialogs/restrict.service';\r\nimport { DataService } from '../../data.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { UUID } from 'angular2-uuid';\r\n\r\n@Component({\r\n  selector: 'app-marker-side',\r\n  templateUrl: './marker-side.component.html',\r\n  styleUrls: ['./marker-side.component.css']\r\n})\r\nexport class MarkerSideComponent implements OnInit {\r\n  marker: MyMarker\r\n  edit = false\r\n  map: MapConfig\r\n  categories = []\r\n  groups: MarkerGroup[] = []\r\n  ready = new Map<string, boolean>()\r\n  restricted = false\r\n  merged: MergedMapType[] = []\r\n\r\n  constructor(private mapSvc: MapService, private CDialog: CommonDialogService, private restrict: RestrictService, private data: DataService) {\r\n    this.data.mapTypesWithMaps.subscribe(items => {\r\n      this.merged = items\r\n    })\r\n\r\n    // Handle Selections\r\n    this.mapSvc.selection.subscribe(sel => {\r\n      if (this.marker != undefined) {\r\n        this.disable()\r\n      }\r\n      if (!sel.isEmpty()) {\r\n        if (MyMarker.is(sel.first)) {\r\n          this.restricted = this.data.isRestricted(sel.first)\r\n          this.marker = sel.first\r\n          this.edit = false\r\n        }\r\n      }\r\n    })\r\n    // Get Data\r\n    this.mapSvc.mapConfig\r\n      .pipe(\r\n        mergeMap(m => {\r\n          this.map = m;\r\n          return this.data.getMarkerGroups(m.id)\r\n        })\r\n      )\r\n      .subscribe(v => {\r\n        this.groups = v\r\n      })\r\n\r\n    this.mapSvc.catsLoaded.subscribe(v => {\r\n      this.categories = this.mapSvc.categories\r\n    })\r\n  }\r\n\r\n  pan() {\r\n    if (this.marker !== undefined) {\r\n      this.mapSvc.panTo(this.marker.marker[\"_latlng\"])\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public newMarker() {\r\n    let m = this.mapSvc.newTempMarker()\r\n    this.mapSvc.addTempMarker(m)\r\n    this.marker = m\r\n    this.restricted = false\r\n    this.editstart()\r\n  }\r\n\r\n\r\n  name(): string {\r\n    let mk = this.mapSvc.getMarkerType(this.marker.type)\r\n    if (mk) {\r\n      return mk.name\r\n    }\r\n    return 'Ugh....'\r\n  }\r\n\r\n  mapId() {\r\n    return this.map.id\r\n  }\r\n\r\n  iconImg() {\r\n    if (this.marker !== undefined) {\r\n      return this.marker.marker\r\n    }\r\n  }\r\n\r\n  public editstart() {\r\n    if (this.marker !== undefined) {\r\n      this.edit = true\r\n      this.enable()\r\n    }\r\n  }\r\n\r\n  public cancel() {\r\n    this.edit = false\r\n    this.disable()\r\n  }\r\n\r\n  public save() {\r\n    this.edit = false\r\n    this.disable()\r\n    console.log('--------SAVING-------');\r\n    console.log('Marker Group = ' + this.marker.markerGroup)\r\n    // Determine if a new Marker group was used\r\n    if (this.marker.markerGroup) {\r\n      let type = this.groups.find(mg => mg.id == this.marker.markerGroup)\r\n      console.log(type);\r\n\r\n      if (type == undefined) {\r\n        console.log('--------NOT FOUND-------');\r\n        let newGroup = new MarkerGroup()\r\n        newGroup.id = UUID.UUID().toString()\r\n        newGroup.name = this.marker.markerGroup\r\n        newGroup.map = this.map.id\r\n        this.marker.markerGroup = newGroup.id\r\n        console.log(newGroup);\r\n        this.data.save(newGroup)\r\n      }\r\n    }\r\n    console.log(this.marker);\r\n\r\n    this.mapSvc.saveMarker(this.marker)\r\n    this.mapSvc.newMarkersLayer.clearLayers()\r\n  }\r\n\r\n  public delete() {\r\n    if (this.marker != undefined) {\r\n      this.CDialog.confirm(\"Are you sure you want to delete this marker?\", \"Delete \" + this.marker.name + \"?\").subscribe(result => {\r\n        if (result) {\r\n          this.mapSvc.deleteMarker(this.marker)\r\n          this.edit = false\r\n          this.marker = undefined\r\n        }\r\n      })\r\n    }\r\n  }\r\n  enable() {\r\n    if (this.marker && this.marker.m.dragging) {\r\n      this.marker.m.dragging.enable()\r\n    } else {\r\n\r\n    }\r\n  }\r\n  disable() {\r\n    if (this.marker && this.marker.m.dragging) {\r\n      this.marker.m.dragging.disable()\r\n    }\r\n  }\r\n\r\n  setType(t: MarkerType) {\r\n    this.marker.type = t.id\r\n    let icn = this.mapSvc.markerTypes.get(t.id)\r\n    this.marker.marker.setIcon(icn)\r\n  }\r\n\r\n  public openLinkedMap() {\r\n    if (this.marker && this.marker.mapLink) {\r\n      this.mapSvc.openMap(this.marker.mapLink)\r\n    }\r\n  }\r\n\r\n  public permissions() {\r\n    if (this.marker) {\r\n      this.restrict.openRestrict(this.marker.view, this.marker.edit).subscribe(([view, edit]) => {\r\n        if (this.data.canEdit(this.marker)) {\r\n          console.log(\"edit \" + edit);\r\n          console.log(\"view \" + view);\r\n\r\n          this.marker.edit = edit\r\n          this.marker.view = view\r\n          this.mapSvc.saveMarker(this.marker)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \".close {\\r\\n    position: absolute;\\r\\n    right: 2px;\\r\\n    top: 2px;\\r\\n    color: lightgray;\\r\\n    cursor: pointer;\\r\\n    font-weight: 300;\\r\\n}\\r\\n.hide {\\r\\n    display: none;\\r\\n    transition: display 2s step-end\\r\\n}\\r\\n.user-tab {\\r\\n    top: 10px;\\r\\n}\\r\\n.map-tab {\\r\\n    top: 50px;\\r\\n}\\r\\n.marker-tab {\\r\\n    top: 90px;\\r\\n}\\r\\n.info-tab {\\r\\n    top: 130px;\\r\\n}\\r\\n.admin-tab {\\r\\n    top: 170px;\\r\\n}\\r\\n.visible {\\r\\n    display: block;\\r\\n}\\r\\n.side-nav {\\r\\n    background-color: rgba(0, 0, 0, .8);\\r\\n    display: block;\\r\\n    position: fixed;\\r\\n    right: -25%;\\r\\n    top: 0;\\r\\n    width: 25%;\\r\\n    height: 100%;\\r\\n    max-height: 100%;\\r\\n    z-index: 2;\\r\\n    padding: 10px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n.side-container {\\r\\n    padding: 10px;\\r\\n    color: white\\r\\n}\\r\\n.sideshow {\\r\\n    right: 0;\\r\\n    transition: right .8s\\r\\n}\\r\\n.sideshow-hide {\\r\\n    transition: right .8s\\r\\n}\\r\\n.tab-icon {\\r\\n    position: absolute;\\r\\n    left: -30px;\\r\\n    z-index: 2;\\r\\n}\\r\\n.tab {\\r\\n    position: absolute;\\r\\n    left: -30px;\\r\\n    /* background-color: #605f5d; */\\r\\n    background-color: rgba(96, 96, 93, 1);\\r\\n    opacity: .8;\\r\\n    border-bottom-left-radius: 4px;\\r\\n    border-top-left-radius: 4px;\\r\\n    padding: 5px;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.tab-selected {\\r\\n    background-color: #9ed485;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"side-nav\\\" [class.sideshow]=\\\"expanded==true\\\" [class.sideshow-hide]=\\\"expanded==false\\\">\\r\\n  <div class=\\\"tab user-tab\\\" (click)=\\\"toggle('user')\\\" [class.tab-selected]=\\\"selected==='user'\\\">\\r\\n    <fa-icon icon=\\\"user\\\" fixedWidth=\\\"true\\\"></fa-icon>\\r\\n  </div>\\r\\n  <div class=\\\"tab map-tab\\\" (click)=\\\"toggle('map')\\\" [class.tab-selected]=\\\"selected==='map'\\\">\\r\\n      <fa-icon icon=\\\"map\\\" fixedWidth=\\\"true\\\"></fa-icon>\\r\\n    </div>\\r\\n  <div class=\\\"tab marker-tab\\\" (click)=\\\"toggle('marker')\\\" [class.tab-selected]=\\\"selected==='marker'\\\">\\r\\n    <fa-icon icon=\\\"map-marker-alt\\\" fixedWidth=\\\"true\\\"></fa-icon>\\r\\n  </div>\\r\\n  <div class=\\\"tab info-tab\\\" (click)=\\\"toggle('layers')\\\" [class.tab-selected]=\\\"selected==='layers'\\\">\\r\\n    <fa-icon icon=\\\"info\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\r\\n  </div>\\r\\n  <div class=\\\"tab admin-tab\\\" (click)=\\\"toggle('admin')\\\" [class.tab-selected]=\\\"selected==='admin'\\\">\\r\\n    <fa-icon icon=\\\"cog\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\r\\n  </div>\\r\\n  <!-- <fa-icon icon=\\\"times\\\" (click)=\\\"close()\\\" class=\\\"close\\\" [class.hide]=\\\"expanded==false\\\"></fa-icon> -->\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"expanded=false\\\" [class.hide]=\\\"expanded==false\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  <app-user-side  class=\\\"side-container\\\"  [class.visible]=\\\"selected==='user'\\\" [class.hide]=\\\"selected!=='user'\\\"></app-user-side>\\r\\n  <app-marker-side  class=\\\"side-container\\\"  [class.visible]=\\\"selected==='marker'\\\"  [class.hide]=\\\"selected!=='marker'\\\"></app-marker-side>\\r\\n  <app-map-selector  class=\\\"side-container\\\" [class.visible]=\\\"selected==='map'\\\" [class.hide]=\\\"selected!=='map'\\\"></app-map-selector>\\r\\n  <app-admin  class=\\\"side-container\\\" [class.visible]=\\\"selected==='admin'\\\" [class.hide]=\\\"selected!=='admin'\\\"></app-admin>\\r\\n  <app-layers-tab    class=\\\"side-container\\\"  [class.visible]=\\\"selected==='layers'\\\" [class.hide]=\\\"selected!=='layers'\\\"></app-layers-tab>\\r\\n</div>\"","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { MapService, MyMarker } from '../map.service';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.css']\r\n})\r\nexport class TabsComponent implements OnInit {\r\n  expanded = false\r\n  selected = \"\"\r\n\r\n  constructor(private zone: NgZone, private mapSvc : MapService) {\r\n    this.mapSvc.selection.subscribe( sel => {\r\n      if (sel.isEmpty()) {\r\n        \r\n      } else {\r\n        if (MyMarker.is(sel.first)) {\r\n          this.expanded = true\r\n          this.selected = 'marker'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  public close() {\r\n    this.selected = \"\"\r\n    this.expanded = false\r\n  }\r\n  public toggle(tab) {\r\n    console.log(\"Toggle\");\r\n\r\n    if (this.selected === tab) {\r\n      this.expanded = false\r\n      // this.selected = \"\"\r\n      setTimeout(() => { this.selected = \"\"}, 800)\r\n    } else {\r\n      this.selected = tab\r\n      this.expanded = true\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \".user-tab {\\r\\n    top: 10px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    font-weight: 300;\\r\\n}\\r\\n\\r\\n.user-photo {\\r\\n    height: 64px;\\r\\n    width: 64px;\\r\\n    border-radius: 50%;\\r\\n    border: 3px solid lightgray;\\r\\n    box-sizing: content-box\\r\\n}\\r\\n\\r\\n.logoutlink {\\r\\n    font-size: .8em;\\r\\n}\\r\\n\\r\\n.user-title {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\"","module.exports = \"\\r\\n<div *ngIf=\\\"isValid(); else showLogin\\\" class=\\\"side-container\\\">\\r\\n  <div class=\\\"user-title\\\">\\r\\n    <img [src]=\\\"user.photo\\\" class=\\\"user-photo user-item \\\">\\r\\n    <h2 class=\\\"user-name mb-0 pb-0 \\\">{{ user.name }}</h2>\\r\\n    <!-- <fa-icon icon=\\\"sign-out-alt\\\" size=\\\"2x\\\" (click)=\\\"logout()\\\" class=\\\"user-logout user-item \\\"></fa-icon> -->\\r\\n    <a href=\\\"#\\\" (click)=\\\"logout()\\\" class=\\\"logoutlink mt-0 pt-0\\\">Log Out</a>\\r\\n  </div>\\r\\n\\r\\n  <label class=\\\"mt-2 mb-0\\\" for=\\\"name\\\">My Groups</label>\\r\\n  <small class=\\\"form-text text-muted mb-2\\\">These are the groups you are in. Check any group that you want to be currently active.</small>\\r\\n\\r\\n  <div class=\\\"group-list\\\">\\r\\n    <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let g of groups\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{g.name}}\\\" [(checklist)]=\\\"user.assumedGroups\\\" [checklistValue]=\\\"g.name\\\"\\r\\n        (checklistChange)=\\\"save()\\\">\\r\\n      <label class=\\\"custom-control-label\\\" for=\\\"{{g.name}}\\\">{{g.name}}</label>\\r\\n      <small *ngIf=\\\"g.description\\\" class=\\\"form-text text-muted\\\">{{g.description}}</small>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #showLogin class=\\\"side-container\\\">\\r\\n  <p>Please login.</p>\\r\\n  <img src=\\\"./assets/signin_with_google.png\\\" (click)=\\\"loginGoogle()\\\">\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase';\r\nimport { DataService } from '../../data.service';\r\nimport { User, UserGroup } from '../../models';\r\nimport { zip, combineLatest } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { MapService } from '../../map.service';\r\n\r\n@Component({\r\n  selector: 'app-user-side',\r\n  templateUrl: './user-side.component.html',\r\n  styleUrls: ['./user-side.component.css']\r\n})\r\nexport class UserSideComponent implements OnInit {\r\n\r\n  user: User\r\n  groups: UserGroup[] = []\r\n\r\n  constructor(public afAuth: AngularFireAuth, private mapSvc: MapService, private data: DataService) {\r\n    combineLatest(\r\n      this.data.user,\r\n      this.data.groups\r\n    ).subscribe(([u, g]) => {\r\n      this.user = u;\r\n      let newGroups = []\r\n      g.forEach(grp => {\r\n        if (grp.members.includes(u.uid)) {\r\n          newGroups.push(grp)\r\n        }\r\n      })\r\n      this.groups = newGroups\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  loginGoogle() {\r\n    this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\r\n  }\r\n  logout() {\r\n    this.afAuth.auth.signOut();\r\n  }\r\n  isValid() {\r\n    return this.user && this.user.uid != \"NOBODY\"\r\n  }\r\n  save() {\r\n    this.data.saveUser(this.user)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyDtGtQCZWLD5FPEsJvbUp-HKp3ZqPIEXFA\",\r\n    authDomain: \"sfcmap.firebaseapp.com\",\r\n    databaseURL: \"https://sfcmap.firebaseio.com\",\r\n    projectId: \"sfcmap\",\r\n    storageBucket: \"sfcmap.appspot.com\",\r\n    messagingSenderId: \"273084079541\"\r\n  }\r\n\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}